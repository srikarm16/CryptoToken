{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "deadlineEnd",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "lenderFound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "registerAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totSupp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/NewrlToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/NewrlToken.sol",
    "exportedSymbols": {
      "NewrlToken": [
        442
      ]
    },
    "id": 443,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "NewrlToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 442,
        "linearizedBaseContracts": [
          442
        ],
        "name": "NewrlToken",
        "nameLocation": "67:10:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 41,
            "mutability": "constant",
            "name": "MAX_UINT256",
            "nameLocation": "109:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 442,
            "src": "84:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "84:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 38,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "32",
                  "id": 36,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "123:1:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "323536",
                  "id": 37,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "126:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "123:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 39,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "132:1:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "123:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 45,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "174:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 442,
            "src": "139:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "147:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "139:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 43,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "158:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c658165",
            "id": 51,
            "mutability": "mutable",
            "name": "allowed",
            "nameLocation": "243:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 442,
            "src": "188:62:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "196:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "188:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 49,
                "keyType": {
                  "id": 47,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "215:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "207:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 48,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "81fbf0a5",
            "id": 53,
            "mutability": "mutable",
            "name": "totSupply",
            "nameLocation": "272:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 442,
            "src": "257:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 52,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "257:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 55,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "301:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 442,
            "src": "287:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 54,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "287:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 57,
            "mutability": "mutable",
            "name": "decimals",
            "nameLocation": "324:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 442,
            "src": "311:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 56,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "311:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 59,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "352:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 442,
            "src": "338:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 58,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "338:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 61,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "379:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 442,
            "src": "364:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 60,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "364:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 69,
            "name": "Transfer",
            "nameLocation": "397:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "422:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "406:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "444:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "428:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "456:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "448:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:57:1"
            },
            "src": "391:72:1"
          },
          {
            "anonymous": false,
            "id": 77,
            "name": "Approval",
            "nameLocation": "474:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "508:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "492:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "539:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "523:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "564:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "556:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "482:93:1"
            },
            "src": "468:108:1"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "596:189:1",
              "statements": [
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80,
                      "name": "totSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "606:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030303030303030303030303030",
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "618:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000_by_1",
                        "typeString": "int_const 100000000000000"
                      },
                      "value": "100000000000000"
                    },
                    "src": "606:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "606:27:1"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "643:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 85,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "651:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "651:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "643:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "643:18:1"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 89,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "671:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 92,
                      "indexExpression": {
                        "expression": {
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "680:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "680:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "671:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 93,
                      "name": "totSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "694:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "671:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "671:32:1"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "713:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4e6577726c546f6b656e",
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "720:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_4ddd4260ab89ca5f00d93de466f47cfd3a568569ab703b85675a887a8974586a",
                        "typeString": "literal_string \"NewrlToken\""
                      },
                      "value": "NewrlToken"
                    },
                    "src": "713:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "713:19:1"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "742:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "753:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "742:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "742:12:1"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "764:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4e5754",
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "773:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_816b68964326a70a7e5ea70d1f32302de2242816078d38da16cc31b7fb3b62f0",
                        "typeString": "literal_string \"NWT\""
                      },
                      "value": "NWT"
                    },
                    "src": "764:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "764:14:1"
                }
              ]
            },
            "id": 109,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:2:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:0:1"
            },
            "scope": 442,
            "src": "582:203:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "899:311:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 118,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "915:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 119,
                      "name": "_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "924:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "915:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151,
                  "nodeType": "IfStatement",
                  "src": "911:265:1",
                  "trueBody": {
                    "id": 150,
                    "nodeType": "Block",
                    "src": "941:235:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 122,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "963:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 124,
                                "indexExpression": {
                                  "id": 123,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61,
                                  "src": "972:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "963:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 125,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "982:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "963:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2066756e647320617661696c61626c65",
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "990:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1",
                                "typeString": "literal_string \"No funds available\""
                              },
                              "value": "No funds available"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1",
                                "typeString": "literal_string \"No funds available\""
                              }
                            ],
                            "id": 121,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "955:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "955:56:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "955:56:1"
                      },
                      {
                        "expression": {
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 130,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1025:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 132,
                            "indexExpression": {
                              "id": 131,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "1034:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1025:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 133,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "1044:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1025:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "1025:25:1"
                      },
                      {
                        "expression": {
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 136,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1064:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 138,
                            "indexExpression": {
                              "id": 137,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1073:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1064:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 139,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "1083:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1064:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "1064:25:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 143,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "1117:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 144,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1124:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 145,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "1131:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 142,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "1108:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1108:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 147,
                        "nodeType": "EmitStatement",
                        "src": "1103:35:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1159:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 117,
                        "id": 149,
                        "nodeType": "Return",
                        "src": "1152:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1194:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 117,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "1187:12:1"
                }
              ]
            },
            "functionSelector": "b7785afb",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsset",
            "nameLocation": "800:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "822:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "814:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "837:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "829:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "813:31:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "882:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "877:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "876:14:1"
            },
            "scope": 442,
            "src": "791:419:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "1348:375:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 166,
                          "name": "_borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "1364:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 167,
                          "name": "_lender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
                          "src": "1377:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1364:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 169,
                          "name": "_borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "1388:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 170,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1401:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1388:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1364:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 173,
                        "name": "_lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "1410:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 174,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "1421:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1410:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1364:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 207,
                  "nodeType": "IfStatement",
                  "src": "1360:329:1",
                  "trueBody": {
                    "id": 206,
                    "nodeType": "Block",
                    "src": "1438:251:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 178,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "1460:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 180,
                                "indexExpression": {
                                  "id": 179,
                                  "name": "_borrower",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 157,
                                  "src": "1469:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1460:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 181,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 161,
                                "src": "1483:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1460:29:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2066756e647320617661696c61626c65",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1491:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1",
                                "typeString": "literal_string \"No funds available\""
                              },
                              "value": "No funds available"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1",
                                "typeString": "literal_string \"No funds available\""
                              }
                            ],
                            "id": 177,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1452:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1452:60:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "1452:60:1"
                      },
                      {
                        "expression": {
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 186,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1526:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 188,
                            "indexExpression": {
                              "id": 187,
                              "name": "_borrower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "1535:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1526:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 189,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "1549:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1526:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 191,
                        "nodeType": "ExpressionStatement",
                        "src": "1526:29:1"
                      },
                      {
                        "expression": {
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 192,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1569:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 194,
                            "indexExpression": {
                              "id": 193,
                              "name": "_lender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1578:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1569:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 195,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "1590:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1569:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 197,
                        "nodeType": "ExpressionStatement",
                        "src": "1569:27:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 199,
                              "name": "_borrower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "1624:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 200,
                              "name": "_lender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1635:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 201,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "1644:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 198,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "1615:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1615:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 203,
                        "nodeType": "EmitStatement",
                        "src": "1610:41:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1672:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 165,
                        "id": 205,
                        "nodeType": "Return",
                        "src": "1665:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1707:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 165,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "1700:12:1"
                }
              ]
            },
            "functionSelector": "4a285883",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lenderFound",
            "nameLocation": "1229:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "_borrower",
                  "nameLocation": "1249:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "1241:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_lender",
                  "nameLocation": "1268:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "1260:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1285:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "1277:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1240:52:1"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1330:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "1325:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1324:14:1"
            },
            "scope": 442,
            "src": "1220:503:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "1856:393:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 222,
                          "name": "_borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "1874:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 223,
                          "name": "_lender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "1887:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1874:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 225,
                          "name": "_borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "1898:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 226,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1911:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1898:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1874:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 229,
                        "name": "_lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "1920:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 230,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "1931:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1920:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1874:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 263,
                  "nodeType": "IfStatement",
                  "src": "1870:343:1",
                  "trueBody": {
                    "id": 262,
                    "nodeType": "Block",
                    "src": "1950:263:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 234,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "1976:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 236,
                                "indexExpression": {
                                  "id": 235,
                                  "name": "_lender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 215,
                                  "src": "1985:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1976:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 237,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "1997:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1976:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2066756e647320617661696c61626c65",
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2005:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1",
                                "typeString": "literal_string \"No funds available\""
                              },
                              "value": "No funds available"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1",
                                "typeString": "literal_string \"No funds available\""
                              }
                            ],
                            "id": 233,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1968:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1968:58:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 241,
                        "nodeType": "ExpressionStatement",
                        "src": "1968:58:1"
                      },
                      {
                        "expression": {
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 242,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2044:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 244,
                            "indexExpression": {
                              "id": 243,
                              "name": "_lender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "2053:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2044:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 245,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "2065:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2044:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 247,
                        "nodeType": "ExpressionStatement",
                        "src": "2044:27:1"
                      },
                      {
                        "expression": {
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 248,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2089:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 250,
                            "indexExpression": {
                              "id": 249,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "2098:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2089:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 251,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "2108:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2089:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 253,
                        "nodeType": "ExpressionStatement",
                        "src": "2089:25:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 255,
                              "name": "_lender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "2146:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 256,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "2155:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 257,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "2162:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 254,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "2137:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2137:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 259,
                        "nodeType": "EmitStatement",
                        "src": "2132:37:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2194:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 221,
                        "id": 261,
                        "nodeType": "Return",
                        "src": "2187:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2233:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 221,
                  "id": 265,
                  "nodeType": "Return",
                  "src": "2226:12:1"
                }
              ]
            },
            "functionSelector": "4689e59b",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deadlineEnd",
            "nameLocation": "1738:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_borrower",
                  "nameLocation": "1758:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "1750:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_lender",
                  "nameLocation": "1777:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "1769:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1794:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "1786:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1786:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1749:52:1"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1839:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "1834:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:14:1"
            },
            "scope": 442,
            "src": "1729:520:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "2353:220:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 277,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2371:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 280,
                          "indexExpression": {
                            "expression": {
                              "id": 278,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2380:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2380:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2371:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 281,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "2395:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2371:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2066756e647320617661696c61626c65",
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2403:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1",
                          "typeString": "literal_string \"No funds available\""
                        },
                        "value": "No funds available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1",
                          "typeString": "literal_string \"No funds available\""
                        }
                      ],
                      "id": 276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2363:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2363:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:61:1"
                },
                {
                  "expression": {
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 286,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2434:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 289,
                      "indexExpression": {
                        "expression": {
                          "id": 287,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2443:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2443:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2434:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 290,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "2458:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2434:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "2434:30:1"
                },
                {
                  "expression": {
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 293,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2474:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 295,
                      "indexExpression": {
                        "id": 294,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "2483:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2474:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 296,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "2491:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2474:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "2474:23:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 300,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2521:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2521:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 302,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "2533:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 303,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "2538:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 299,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "2512:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2512:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "EmitStatement",
                  "src": "2507:38:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2562:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 275,
                  "id": 307,
                  "nodeType": "Return",
                  "src": "2555:11:1"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2265:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2282:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "2274:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2295:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "2287:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2287:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2273:29:1"
            },
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2340:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "2335:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2334:14:1"
            },
            "scope": 442,
            "src": "2256:317:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "2705:437:1",
              "statements": [
                {
                  "assignments": [
                    321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 321,
                      "mutability": "mutable",
                      "name": "allowanceAllowed",
                      "nameLocation": "2723:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "2715:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 320,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2715:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 328,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 322,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2742:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 324,
                      "indexExpression": {
                        "id": 323,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "2750:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2742:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 327,
                    "indexExpression": {
                      "expression": {
                        "id": 325,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2757:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2757:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2742:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2715:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 330,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2799:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 332,
                            "indexExpression": {
                              "id": 331,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 311,
                              "src": "2808:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2799:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 333,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "2818:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2799:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 335,
                            "name": "allowanceAllowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "2828:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 336,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "2848:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2828:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2799:55:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e6473206e6f7420616c6c6f776564",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2868:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ea62c26cd6aac57fe38692d21b5771216a4ea6f13ef68686e115f4c91c98372",
                          "typeString": "literal_string \"Funds not allowed\""
                        },
                        "value": "Funds not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ea62c26cd6aac57fe38692d21b5771216a4ea6f13ef68686e115f4c91c98372",
                          "typeString": "literal_string \"Funds not allowed\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2778:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:119:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "2778:119:1"
                },
                {
                  "expression": {
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 342,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2907:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 344,
                      "indexExpression": {
                        "id": 343,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "2916:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2907:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 345,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "2924:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2907:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "2907:23:1"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 348,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2940:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 350,
                      "indexExpression": {
                        "id": 349,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "2949:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2940:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 351,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "2959:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2940:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:25:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 354,
                      "name": "allowanceAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "2979:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 355,
                      "name": "MAX_UINT256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2998:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2979:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 367,
                  "nodeType": "IfStatement",
                  "src": "2975:97:1",
                  "trueBody": {
                    "id": 366,
                    "nodeType": "Block",
                    "src": "3011:61:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 357,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "3025:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 361,
                              "indexExpression": {
                                "id": 358,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "3033:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3025:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 362,
                            "indexExpression": {
                              "expression": {
                                "id": 359,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3040:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3040:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3025:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 363,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "3055:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3025:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 365,
                        "nodeType": "ExpressionStatement",
                        "src": "3025:36:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 369,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "3095:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 370,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "3102:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 371,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "3107:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 368,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "3086:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3086:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "EmitStatement",
                  "src": "3081:33:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3131:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 319,
                  "id": 375,
                  "nodeType": "Return",
                  "src": "3124:11:1"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2588:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2618:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "2610:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2610:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2641:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "2633:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2633:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2662:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "2654:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2600:74:1"
            },
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2696:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "2691:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:14:1"
            },
            "scope": 442,
            "src": "2579:563:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "3209:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 382,
                    "name": "totSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "3226:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 381,
                  "id": 383,
                  "nodeType": "Return",
                  "src": "3219:16:1"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3157:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3168:2:1"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "totSupp",
                  "nameLocation": "3200:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "3192:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3191:17:1"
            },
            "scope": 442,
            "src": "3148:94:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "3321:40:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 392,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3338:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 394,
                    "indexExpression": {
                      "id": 393,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "3347:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3338:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 391,
                  "id": 395,
                  "nodeType": "Return",
                  "src": "3331:23:1"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3257:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3275:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "3267:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3267:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3266:16:1"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3312:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "3304:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3304:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3303:17:1"
            },
            "scope": 442,
            "src": "3248:113:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "3468:129:1",
              "statements": [
                {
                  "expression": {
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 406,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "3478:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 410,
                        "indexExpression": {
                          "expression": {
                            "id": 407,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3486:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3486:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3478:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 411,
                      "indexExpression": {
                        "id": 409,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "3498:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3478:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 412,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "3510:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3478:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "3478:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 416,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3540:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3540:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 418,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "3552:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 419,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "3562:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 415,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "3531:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3531:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 421,
                  "nodeType": "EmitStatement",
                  "src": "3526:43:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3586:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 405,
                  "id": 423,
                  "nodeType": "Return",
                  "src": "3579:11:1"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3376:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "3392:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "3384:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3410:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "3402:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3383:34:1"
            },
            "returnParameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3455:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "3450:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3449:14:1"
            },
            "scope": 442,
            "src": "3367:230:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "3724:49:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 434,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "3741:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 436,
                      "indexExpression": {
                        "id": 435,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "3749:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3741:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 438,
                    "indexExpression": {
                      "id": 437,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "3757:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3741:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 433,
                  "id": 439,
                  "nodeType": "Return",
                  "src": "3734:32:1"
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3612:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3630:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "3622:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "3646:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "3638:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3638:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3621:34:1"
            },
            "returnParameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "remaining",
                  "nameLocation": "3709:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "3701:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3701:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3700:19:1"
            },
            "scope": 442,
            "src": "3603:170:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 443,
        "src": "58:3717:1",
        "usedErrors": []
      }
    ],
    "src": "32:3743:1"
  },
  "bytecode": "608060405234801561001057600080fd5b50655af3107a40006002819055600680546001600160a01b0319163390811790915560009081526020818152604091829020929092558051808201909152600a808252692732bbb9362a37b5b2b760b11b9190920190815261007591600391906100b3565b506004805460ff19166001179055604080518082019091526003808252621395d560ea1b60209092019182526100ad916005916100b3565b50610187565b8280546100bf9061014c565b90600052602060002090601f0160209004810192826100e15760008555610127565b82601f106100fa57805160ff1916838001178555610127565b82800160010185558215610127579182015b8281111561012757825182559160200191906001019061010c565b50610133929150610137565b5090565b5b808211156101335760008155600101610138565b600181811c9082168061016057607f821691505b6020821081141561018157634e487b7160e01b600052602260045260246000fd5b50919050565b610b37806101966000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80635c6581651161009757806395d89b411161006657806395d89b4114610258578063a9059cbb14610260578063b7785afb14610273578063dd62ed3e1461028657600080fd5b80635c658165146101d057806370a08231146101fb57806381fbf0a5146102245780638da5cb5b1461022d57600080fd5b806327e235e3116100d357806327e235e31461016b578063313ce5671461018b5780634689e59b146101aa5780634a285883146101bd57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d6102bf565b60405161011a9190610910565b60405180910390f35b610136610131366004610981565b61034d565b604051901515815260200161011a565b6002545b60405190815260200161011a565b6101366101663660046109ab565b6103ba565b61014a6101793660046109e7565b60006020819052908152604090205481565b6004546101989060ff1681565b60405160ff909116815260200161011a565b6101366101b83660046109ab565b610524565b6101366101cb3660046109ab565b61064f565b61014a6101de366004610a02565b600160209081526000928352604080842090915290825290205481565b61014a6102093660046109e7565b6001600160a01b031660009081526020819052604090205490565b61014a60025481565b600654610240906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61010d610767565b61013661026e366004610981565b610774565b610136610281366004610981565b61081f565b61014a610294366004610a02565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600380546102cc90610a35565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610a35565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b505050505081565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103a89086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660008181526001602090815260408083203384528252808320549383529082905281205490919083118015906103fa5750828110155b61043f5760405162461bcd60e51b8152602060048201526011602482015270119d5b991cc81b9bdd08185b1b1bddd959607a1b60448201526064015b60405180910390fd5b6001600160a01b03841660009081526020819052604081208054859290610467908490610a86565b90915550506001600160a01b03851660009081526020819052604081208054859290610494908490610a9e565b90915550506000198110156104dc576001600160a01b0385166000908152600160209081526040808320338452909152812080548592906104d6908490610a9e565b90915550505b836001600160a01b0316856001600160a01b0316600080516020610ae28339815191528560405161050f91815260200190565b60405180910390a360019150505b9392505050565b6000826001600160a01b0316846001600160a01b03161415801561055657506006546001600160a01b03858116911614155b801561057057506006546001600160a01b03848116911614155b15610645576001600160a01b0383166000908152602081905260409020548211156105ad5760405162461bcd60e51b815260040161043690610ab5565b6001600160a01b038316600090815260208190526040812080548492906105d5908490610a9e565b90915550506006546001600160a01b031660009081526020819052604081208054849290610604908490610a86565b90915550506006546040518381526001600160a01b0391821691851690600080516020610ae2833981519152906020015b60405180910390a350600161051d565b5060009392505050565b6000826001600160a01b0316846001600160a01b03161415801561068157506006546001600160a01b03858116911614155b801561069b57506006546001600160a01b03848116911614155b15610645576001600160a01b0384166000908152602081905260409020548211156106d85760405162461bcd60e51b815260040161043690610ab5565b6001600160a01b03841660009081526020819052604081208054849290610700908490610a9e565b90915550506001600160a01b0383166000908152602081905260408120805484929061072d908490610a86565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610ae28339815191528460405161063591815260200190565b600580546102cc90610a35565b336000908152602081905260408120548211156107a35760405162461bcd60e51b815260040161043690610ab5565b33600090815260208190526040812080548492906107c2908490610a9e565b90915550506001600160a01b038316600090815260208190526040812080548492906107ef908490610a86565b90915550506040518281526001600160a01b038416903390600080516020610ae2833981519152906020016103a8565b6006546000906001600160a01b03848116911614610907576006546001600160a01b03166000908152602081905260409020548211156108715760405162461bcd60e51b815260040161043690610ab5565b6006546001600160a01b03166000908152602081905260408120805484929061089b908490610a9e565b90915550506001600160a01b038316600090815260208190526040812080548492906108c8908490610a86565b90915550506006546040518381526001600160a01b03858116921690600080516020610ae28339815191529060200160405180910390a35060016103b4565b50600092915050565b600060208083528351808285015260005b8181101561093d57858101830151858201604001528201610921565b8181111561094f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461097c57600080fd5b919050565b6000806040838503121561099457600080fd5b61099d83610965565b946020939093013593505050565b6000806000606084860312156109c057600080fd5b6109c984610965565b92506109d760208501610965565b9150604084013590509250925092565b6000602082840312156109f957600080fd5b61051d82610965565b60008060408385031215610a1557600080fd5b610a1e83610965565b9150610a2c60208401610965565b90509250929050565b600181811c90821680610a4957607f821691505b60208210811415610a6a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a9957610a99610a70565b500190565b600082821015610ab057610ab0610a70565b500390565b6020808252601290820152714e6f2066756e647320617661696c61626c6560701b60408201526060019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122040b95e9b985a2eb3ccb050782ffb91052c923456a310099b98424afa46d6abe664736f6c634300080b0033",
  "bytecodeSha1": "261f0ea8bf6b30ed79308204b0158038254a5270",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "NewrlToken",
  "coverageMap": {
    "branches": {
      "1": {
        "NewrlToken.deadlineEnd": {
          "35": [
            1874,
            1894,
            false
          ],
          "36": [
            1898,
            1916,
            false
          ],
          "37": [
            1920,
            1936,
            false
          ],
          "38": [
            1976,
            2003,
            true
          ]
        },
        "NewrlToken.lenderFound": {
          "39": [
            1364,
            1384,
            false
          ],
          "40": [
            1388,
            1406,
            false
          ],
          "41": [
            1410,
            1426,
            false
          ],
          "42": [
            1460,
            1489,
            true
          ]
        },
        "NewrlToken.registerAsset": {
          "44": [
            915,
            929,
            false
          ],
          "45": [
            963,
            988,
            true
          ]
        },
        "NewrlToken.transfer": {
          "43": [
            2371,
            2401,
            true
          ]
        },
        "NewrlToken.transferFrom": {
          "32": [
            2799,
            2824,
            false
          ],
          "33": [
            2828,
            2854,
            true
          ],
          "34": [
            2979,
            3009,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "NewrlToken.allowance": {
          "2": [
            3734,
            3766
          ]
        },
        "NewrlToken.approve": {
          "3": [
            3478,
            3516
          ],
          "4": [
            3526,
            3569
          ],
          "5": [
            3579,
            3590
          ]
        },
        "NewrlToken.balanceOf": {
          "1": [
            3331,
            3354
          ]
        },
        "NewrlToken.deadlineEnd": {
          "12": [
            1968,
            2026
          ],
          "13": [
            2044,
            2071
          ],
          "14": [
            2089,
            2114
          ],
          "15": [
            2132,
            2169
          ],
          "16": [
            2187,
            2198
          ],
          "17": [
            2226,
            2238
          ]
        },
        "NewrlToken.lenderFound": {
          "18": [
            1452,
            1512
          ],
          "19": [
            1526,
            1555
          ],
          "20": [
            1569,
            1596
          ],
          "21": [
            1610,
            1651
          ]
        },
        "NewrlToken.registerAsset": {
          "26": [
            955,
            1011
          ],
          "27": [
            1025,
            1050
          ],
          "28": [
            1064,
            1089
          ],
          "29": [
            1103,
            1138
          ],
          "30": [
            1152,
            1163
          ],
          "31": [
            1187,
            1199
          ]
        },
        "NewrlToken.totalSupply": {
          "0": [
            3219,
            3235
          ]
        },
        "NewrlToken.transfer": {
          "22": [
            2363,
            2424
          ],
          "23": [
            2434,
            2464
          ],
          "24": [
            2474,
            2497
          ],
          "25": [
            2507,
            2545
          ]
        },
        "NewrlToken.transferFrom": {
          "6": [
            2778,
            2897
          ],
          "7": [
            2907,
            2930
          ],
          "8": [
            2940,
            2965
          ],
          "9": [
            3025,
            3061
          ],
          "10": [
            3081,
            3114
          ],
          "11": [
            3124,
            3135
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c80635c6581651161009757806395d89b411161006657806395d89b4114610258578063a9059cbb14610260578063b7785afb14610273578063dd62ed3e1461028657600080fd5b80635c658165146101d057806370a08231146101fb57806381fbf0a5146102245780638da5cb5b1461022d57600080fd5b806327e235e3116100d357806327e235e31461016b578063313ce5671461018b5780634689e59b146101aa5780634a285883146101bd57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d6102bf565b60405161011a9190610910565b60405180910390f35b610136610131366004610981565b61034d565b604051901515815260200161011a565b6002545b60405190815260200161011a565b6101366101663660046109ab565b6103ba565b61014a6101793660046109e7565b60006020819052908152604090205481565b6004546101989060ff1681565b60405160ff909116815260200161011a565b6101366101b83660046109ab565b610524565b6101366101cb3660046109ab565b61064f565b61014a6101de366004610a02565b600160209081526000928352604080842090915290825290205481565b61014a6102093660046109e7565b6001600160a01b031660009081526020819052604090205490565b61014a60025481565b600654610240906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61010d610767565b61013661026e366004610981565b610774565b610136610281366004610981565b61081f565b61014a610294366004610a02565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600380546102cc90610a35565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610a35565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b505050505081565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103a89086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660008181526001602090815260408083203384528252808320549383529082905281205490919083118015906103fa5750828110155b61043f5760405162461bcd60e51b8152602060048201526011602482015270119d5b991cc81b9bdd08185b1b1bddd959607a1b60448201526064015b60405180910390fd5b6001600160a01b03841660009081526020819052604081208054859290610467908490610a86565b90915550506001600160a01b03851660009081526020819052604081208054859290610494908490610a9e565b90915550506000198110156104dc576001600160a01b0385166000908152600160209081526040808320338452909152812080548592906104d6908490610a9e565b90915550505b836001600160a01b0316856001600160a01b0316600080516020610ae28339815191528560405161050f91815260200190565b60405180910390a360019150505b9392505050565b6000826001600160a01b0316846001600160a01b03161415801561055657506006546001600160a01b03858116911614155b801561057057506006546001600160a01b03848116911614155b15610645576001600160a01b0383166000908152602081905260409020548211156105ad5760405162461bcd60e51b815260040161043690610ab5565b6001600160a01b038316600090815260208190526040812080548492906105d5908490610a9e565b90915550506006546001600160a01b031660009081526020819052604081208054849290610604908490610a86565b90915550506006546040518381526001600160a01b0391821691851690600080516020610ae2833981519152906020015b60405180910390a350600161051d565b5060009392505050565b6000826001600160a01b0316846001600160a01b03161415801561068157506006546001600160a01b03858116911614155b801561069b57506006546001600160a01b03848116911614155b15610645576001600160a01b0384166000908152602081905260409020548211156106d85760405162461bcd60e51b815260040161043690610ab5565b6001600160a01b03841660009081526020819052604081208054849290610700908490610a9e565b90915550506001600160a01b0383166000908152602081905260408120805484929061072d908490610a86565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610ae28339815191528460405161063591815260200190565b600580546102cc90610a35565b336000908152602081905260408120548211156107a35760405162461bcd60e51b815260040161043690610ab5565b33600090815260208190526040812080548492906107c2908490610a9e565b90915550506001600160a01b038316600090815260208190526040812080548492906107ef908490610a86565b90915550506040518281526001600160a01b038416903390600080516020610ae2833981519152906020016103a8565b6006546000906001600160a01b03848116911614610907576006546001600160a01b03166000908152602081905260409020548211156108715760405162461bcd60e51b815260040161043690610ab5565b6006546001600160a01b03166000908152602081905260408120805484929061089b908490610a9e565b90915550506001600160a01b038316600090815260208190526040812080548492906108c8908490610a86565b90915550506006546040518381526001600160a01b03858116921690600080516020610ae28339815191529060200160405180910390a35060016103b4565b50600092915050565b600060208083528351808285015260005b8181101561093d57858101830151858201604001528201610921565b8181111561094f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461097c57600080fd5b919050565b6000806040838503121561099457600080fd5b61099d83610965565b946020939093013593505050565b6000806000606084860312156109c057600080fd5b6109c984610965565b92506109d760208501610965565b9150604084013590509250925092565b6000602082840312156109f957600080fd5b61051d82610965565b60008060408385031215610a1557600080fd5b610a1e83610965565b9150610a2c60208401610965565b90509250929050565b600181811c90821680610a4957607f821691505b60208210811415610a6a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a9957610a99610a70565b500190565b600082821015610ab057610ab0610a70565b500390565b6020808252601290820152714e6f2066756e647320617661696c61626c6560701b60408201526060019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122040b95e9b985a2eb3ccb050782ffb91052c923456a310099b98424afa46d6abe664736f6c634300080b0033",
  "deployedSourceMap": "58:3717:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;287:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3367:230;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:2;;1211:22;1193:41;;1181:2;1166:18;3367:230:1;1053:187:2;3148:94:1;3226:9;;3148:94;;;1391:25:2;;;1379:2;1364:18;3148:94:1;1245:177:2;2579:563:1;;;;;;:::i;:::-;;:::i;139:43::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;311:21;;;;;;;;;;;;2123:4:2;2111:17;;;2093:36;;2081:2;2066:18;311:21:1;1951:184:2;1729:520:1;;;;;;:::i;:::-;;:::i;1220:503::-;;;;;;:::i;:::-;;:::i;188:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3248:113;;;;;;:::i;:::-;-1:-1:-1;;;;;3338:16:1;3304:15;3338:16;;;;;;;;;;;;3248:113;257:24;;;;;;364:20;;;;;-1:-1:-1;;;;;364:20:1;;;;;;-1:-1:-1;;;;;2569:32:2;;;2551:51;;2539:2;2524:18;364:20:1;2405:203:2;338:20:1;;;:::i;2256:317::-;;;;;;:::i;:::-;;:::i;791:419::-;;;;;;:::i;:::-;;:::i;3603:170::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3741:15:1;;;3701:17;3741:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;3603:170;287:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3367:230::-;3486:10;3450:12;3478:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3478:29:1;;;;;;;;;;:38;;;3531;3450:12;;3478:29;;3531:38;;;;3510:6;1391:25:2;;1379:2;1364:18;;1245:177;3531:38:1;;;;;;;;-1:-1:-1;3586:4:1;3367:230;;;;;:::o;2579:563::-;-1:-1:-1;;;;;2742:14:1;;2691:12;2742:14;;;:7;:14;;;;;;;;2757:10;2742:26;;;;;;;;2799:15;;;;;;;;;;2691:12;;2742:26;2799:25;-1:-1:-1;2799:25:1;;;:55;;;2848:6;2828:16;:26;;2799:55;2778:119;;;;-1:-1:-1;;;2778:119:1;;3200:2:2;2778:119:1;;;3182:21:2;3239:2;3219:18;;;3212:30;-1:-1:-1;;;3258:18:2;;;3251:47;3315:18;;2778:119:1;;;;;;;;;-1:-1:-1;;;;;2907:13:1;;:8;:13;;;;;;;;;;:23;;2924:6;;2907:8;:23;;2924:6;;2907:23;:::i;:::-;;;;-1:-1:-1;;;;;;;2940:15:1;;:8;:15;;;;;;;;;;:25;;2959:6;;2940:8;:25;;2959:6;;2940:25;:::i;:::-;;;;-1:-1:-1;;;;2979:30:1;;2975:97;;;-1:-1:-1;;;;;3025:14:1;;;;;;:7;:14;;;;;;;;3040:10;3025:26;;;;;;;:36;;3055:6;;3025:14;:36;;3055:6;;3025:36;:::i;:::-;;;;-1:-1:-1;;2975:97:1;3102:3;-1:-1:-1;;;;;3086:28:1;3095:5;-1:-1:-1;;;;;3086:28:1;-1:-1:-1;;;;;;;;;;;3107:6:1;3086:28;;;;1391:25:2;;1379:2;1364:18;;1245:177;3086:28:1;;;;;;;;3131:4;3124:11;;;2579:563;;;;;;:::o;1729:520::-;1834:12;1887:7;-1:-1:-1;;;;;1874:20:1;:9;-1:-1:-1;;;;;1874:20:1;;;:42;;;;-1:-1:-1;1911:5:1;;-1:-1:-1;;;;;1898:18:1;;;1911:5;;1898:18;;1874:42;:62;;;;-1:-1:-1;1931:5:1;;-1:-1:-1;;;;;1920:16:1;;;1931:5;;1920:16;;1874:62;1870:343;;;-1:-1:-1;;;;;1976:17:1;;:8;:17;;;;;;;;;;;:27;-1:-1:-1;1976:27:1;1968:58;;;;-1:-1:-1;;;1968:58:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2044:17:1;;:8;:17;;;;;;;;;;:27;;2065:6;;2044:8;:27;;2065:6;;2044:27;:::i;:::-;;;;-1:-1:-1;;2098:5:1;;-1:-1:-1;;;;;2098:5:1;2089:8;:15;;;;;;;;;;:25;;2108:6;;2089:8;:25;;2108:6;;2089:25;:::i;:::-;;;;-1:-1:-1;;2155:5:1;;2137:32;;1391:25:2;;;-1:-1:-1;;;;;2155:5:1;;;;2137:32;;;-1:-1:-1;;;;;;;;;;;2137:32:1;1379:2:2;1364:18;2137:32:1;;;;;;;;-1:-1:-1;2194:4:1;2187:11;;1870:343;-1:-1:-1;2233:5:1;1729:520;;;;;:::o;1220:503::-;1325:12;1377:7;-1:-1:-1;;;;;1364:20:1;:9;-1:-1:-1;;;;;1364:20:1;;;:42;;;;-1:-1:-1;1401:5:1;;-1:-1:-1;;;;;1388:18:1;;;1401:5;;1388:18;;1364:42;:62;;;;-1:-1:-1;1421:5:1;;-1:-1:-1;;;;;1410:16:1;;;1421:5;;1410:16;;1364:62;1360:329;;;-1:-1:-1;;;;;1460:19:1;;:8;:19;;;;;;;;;;;:29;-1:-1:-1;1460:29:1;1452:60;;;;-1:-1:-1;;;1452:60:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1526:19:1;;:8;:19;;;;;;;;;;:29;;1549:6;;1526:8;:29;;1549:6;;1526:29;:::i;:::-;;;;-1:-1:-1;;;;;;;1569:17:1;;:8;:17;;;;;;;;;;:27;;1590:6;;1569:8;:27;;1590:6;;1569:27;:::i;:::-;;;;;;;;1635:7;-1:-1:-1;;;;;1615:36:1;1624:9;-1:-1:-1;;;;;1615:36:1;-1:-1:-1;;;;;;;;;;;1644:6:1;1615:36;;;;1391:25:2;;1379:2;1364:18;;1245:177;338:20:1;;;;;;;:::i;2256:317::-;2380:10;2335:12;2371:20;;;;;;;;;;;:30;-1:-1:-1;2371:30:1;2363:61;;;;-1:-1:-1;;;2363:61:1;;;;;;;:::i;:::-;2443:10;2434:8;:20;;;;;;;;;;:30;;2458:6;;2434:8;:30;;2458:6;;2434:30;:::i;:::-;;;;-1:-1:-1;;;;;;;2474:13:1;;:8;:13;;;;;;;;;;:23;;2491:6;;2474:8;:23;;2491:6;;2474:23;:::i;:::-;;;;-1:-1:-1;;2512:33:1;;1391:25:2;;;-1:-1:-1;;;;;2512:33:1;;;2521:10;;-1:-1:-1;;;;;;;;;;;2512:33:1;1379:2:2;1364:18;2512:33:1;1245:177:2;791:419:1;915:5;;877:12;;-1:-1:-1;;;;;915:14:1;;;:5;;:14;911:265;;972:5;;-1:-1:-1;;;;;972:5:1;963:8;:15;;;;;;;;;;;:25;-1:-1:-1;963:25:1;955:56;;;;-1:-1:-1;;;955:56:1;;;;;;;:::i;:::-;1034:5;;-1:-1:-1;;;;;1034:5:1;1025:8;:15;;;;;;;;;;:25;;1044:6;;1025:8;:25;;1044:6;;1025:25;:::i;:::-;;;;-1:-1:-1;;;;;;;1064:15:1;;:8;:15;;;;;;;;;;:25;;1083:6;;1064:8;:25;;1083:6;;1064:25;:::i;:::-;;;;-1:-1:-1;;1117:5:1;;1108:30;;1391:25:2;;;-1:-1:-1;;;;;1108:30:1;;;;1117:5;;-1:-1:-1;;;;;;;;;;;1108:30:1;1379:2:2;1364:18;1108:30:1;;;;;;;-1:-1:-1;1159:4:1;1152:11;;911:265;-1:-1:-1;1194:5:1;791:419;;;;:::o;14:597:2:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:2;574:15;-1:-1:-1;;570:29:2;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:2:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:2;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:2:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1760:186::-;1819:6;1872:2;1860:9;1851:7;1847:23;1843:32;1840:52;;;1888:1;1885;1878:12;1840:52;1911:29;1930:9;1911:29;:::i;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2613:380::-;2692:1;2688:12;;;;2735;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:161;;;2909:10;2904:3;2900:20;2897:1;2890:31;2944:4;2941:1;2934:15;2972:4;2969:1;2962:15;2826:161;;2613:380;;;:::o;3344:127::-;3405:10;3400:3;3396:20;3393:1;3386:31;3436:4;3433:1;3426:15;3460:4;3457:1;3450:15;3476:128;3516:3;3547:1;3543:6;3540:1;3537:13;3534:39;;;3553:18;;:::i;:::-;-1:-1:-1;3589:9:2;;3476:128::o;3609:125::-;3649:4;3677:1;3674;3671:8;3668:34;;;3682:18;;:::i;:::-;-1:-1:-1;3719:9:2;;3609:125::o;3739:342::-;3941:2;3923:21;;;3980:2;3960:18;;;3953:30;-1:-1:-1;;;4014:2:2;3999:18;;3992:48;4072:2;4057:18;;3739:342::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    58,
    3775
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C658165 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xB7785AFB EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C658165 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x81FBF0A5 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27E235E3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x4689E59B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x4A285883 EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x981 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x14A PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x198 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x240 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x767 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x981 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x981 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x14A PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xA35 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F8 SWAP1 PUSH2 0xA35 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x3A8 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP4 DUP4 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 GT DUP1 ISZERO SWAP1 PUSH2 0x3FA JUMPI POP DUP3 DUP2 LT ISZERO JUMPDEST PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x119D5B991CC81B9BDD08185B1B1BDDD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x467 SWAP1 DUP5 SWAP1 PUSH2 0xA86 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x494 SWAP1 DUP5 SWAP1 PUSH2 0xA9E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x4D6 SWAP1 DUP5 SWAP1 PUSH2 0xA9E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x556 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x570 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x645 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x436 SWAP1 PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5D5 SWAP1 DUP5 SWAP1 PUSH2 0xA9E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x604 SWAP1 DUP5 SWAP1 PUSH2 0xA86 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH2 0x51D JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x681 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x69B JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x645 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x436 SWAP1 PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x700 SWAP1 DUP5 SWAP1 PUSH2 0xA9E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x72D SWAP1 DUP5 SWAP1 PUSH2 0xA86 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xA35 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x436 SWAP1 PUSH2 0xAB5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7C2 SWAP1 DUP5 SWAP1 PUSH2 0xA9E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7EF SWAP1 DUP5 SWAP1 PUSH2 0xA86 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x907 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x871 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x436 SWAP1 PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x89B SWAP1 DUP5 SWAP1 PUSH2 0xA9E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8C8 SWAP1 DUP5 SWAP1 PUSH2 0xA86 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH2 0x3B4 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x93D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x921 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x99D DUP4 PUSH2 0x965 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C9 DUP5 PUSH2 0x965 JUMP JUMPDEST SWAP3 POP PUSH2 0x9D7 PUSH1 0x20 DUP6 ADD PUSH2 0x965 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51D DUP3 PUSH2 0x965 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1E DUP4 PUSH2 0x965 JUMP JUMPDEST SWAP2 POP PUSH2 0xA2C PUSH1 0x20 DUP5 ADD PUSH2 0x965 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA49 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA99 JUMPI PUSH2 0xA99 PUSH2 0xA70 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xAB0 JUMPI PUSH2 0xAB0 PUSH2 0xA70 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x4E6F2066756E647320617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xB9 0x5E SWAP12 SWAP9 GAS 0x2E 0xB3 0xCC 0xB0 POP PUSH25 0x2FFB91052C923456A310099B98424AFA46D6ABE664736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        58,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5C658165"
    },
    "38": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "GT",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x258"
    },
    "64": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260"
    },
    "75": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB7785AFB"
    },
    "82": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x273"
    },
    "86": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x286"
    },
    "97": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "REVERT",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5C658165"
    },
    "109": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D0"
    },
    "113": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FB"
    },
    "124": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x81FBF0A5"
    },
    "131": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x224"
    },
    "135": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22D"
    },
    "146": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "150": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "REVERT",
      "path": "1"
    },
    "151": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x27E235E3"
    },
    "158": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "GT",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x27E235E3"
    },
    "169": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16B"
    },
    "173": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "180": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18B"
    },
    "184": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4689E59B"
    },
    "191": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AA"
    },
    "195": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4A285883"
    },
    "202": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BD"
    },
    "206": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "210": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "REVERT",
      "path": "1"
    },
    "211": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "212": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "213": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "218": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "219": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "223": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "224": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "229": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "230": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x123"
    },
    "233": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "234": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "235": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "240": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "241": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "244": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "245": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "246": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "251": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "EQ",
      "path": "1"
    },
    "252": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x158"
    },
    "255": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "256": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "257": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        58,
        3775
      ],
      "op": "REVERT",
      "path": "1"
    },
    "261": {
      "offset": [
        287,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "262": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D"
    },
    "265": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BF"
    },
    "268": {
      "fn": null,
      "jump": "i",
      "offset": [
        287,
        305
      ],
      "op": "JUMP",
      "path": "1"
    },
    "269": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "270": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "272": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "273": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "276": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "277": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "278": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x910"
    },
    "281": {
      "fn": null,
      "jump": "i",
      "offset": [
        287,
        305
      ],
      "op": "JUMP",
      "path": "1"
    },
    "282": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "283": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "285": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "286": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "287": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "288": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "SUB",
      "path": "1"
    },
    "289": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "290": {
      "fn": null,
      "offset": [
        287,
        305
      ],
      "op": "RETURN",
      "path": "1"
    },
    "291": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "292": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "295": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x131"
    },
    "298": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "299": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "301": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x981"
    },
    "304": {
      "fn": "NewrlToken.approve",
      "jump": "i",
      "offset": [
        3367,
        3597
      ],
      "op": "JUMP",
      "path": "1"
    },
    "305": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "306": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34D"
    },
    "309": {
      "fn": "NewrlToken.approve",
      "jump": "i",
      "offset": [
        3367,
        3597
      ],
      "op": "JUMP",
      "path": "1"
    },
    "310": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "311": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "313": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "314": {
      "op": "SWAP1"
    },
    "315": {
      "op": "ISZERO"
    },
    "316": {
      "op": "ISZERO"
    },
    "317": {
      "op": "DUP2"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "321": {
      "op": "ADD"
    },
    "322": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "325": {
      "op": "JUMP"
    },
    "326": {
      "fn": "NewrlToken.totalSupply",
      "offset": [
        3148,
        3242
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "327": {
      "fn": "NewrlToken.totalSupply",
      "offset": [
        3226,
        3235
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x2"
    },
    "329": {
      "fn": "NewrlToken.totalSupply",
      "offset": [
        3226,
        3235
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "330": {
      "fn": "NewrlToken.totalSupply",
      "offset": [
        3148,
        3242
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "331": {
      "fn": "NewrlToken.totalSupply",
      "offset": [
        3148,
        3242
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "333": {
      "fn": "NewrlToken.totalSupply",
      "offset": [
        3148,
        3242
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "334": {
      "op": "SWAP1"
    },
    "335": {
      "op": "DUP2"
    },
    "336": {
      "op": "MSTORE"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "339": {
      "op": "ADD"
    },
    "340": {
      "fn": "NewrlToken.totalSupply",
      "offset": [
        3148,
        3242
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "343": {
      "op": "JUMP"
    },
    "344": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "345": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "348": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166"
    },
    "351": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "352": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "354": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AB"
    },
    "357": {
      "fn": "NewrlToken.transferFrom",
      "jump": "i",
      "offset": [
        2579,
        3142
      ],
      "op": "JUMP",
      "path": "1"
    },
    "358": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "359": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BA"
    },
    "362": {
      "fn": "NewrlToken.transferFrom",
      "jump": "i",
      "offset": [
        2579,
        3142
      ],
      "op": "JUMP",
      "path": "1"
    },
    "363": {
      "offset": [
        139,
        182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "364": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "367": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x179"
    },
    "370": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "371": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "373": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E7"
    },
    "376": {
      "fn": "NewrlToken.transferFrom",
      "jump": "i",
      "offset": [
        139,
        182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "377": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "378": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "380": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "382": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "383": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "384": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "385": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "386": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "387": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "388": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "390": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "391": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "392": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "393": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "394": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        139,
        182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "395": {
      "offset": [
        311,
        332
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "396": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "398": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "399": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x198"
    },
    "402": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "403": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "405": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "AND",
      "path": "1"
    },
    "406": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "DUP2",
      "path": "1"
    },
    "407": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "JUMP",
      "path": "1"
    },
    "408": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "409": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "411": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        311,
        332
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "412": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "414": {
      "op": "SWAP1"
    },
    "415": {
      "op": "SWAP2"
    },
    "416": {
      "op": "AND"
    },
    "417": {
      "op": "DUP2"
    },
    "418": {
      "op": "MSTORE"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "421": {
      "op": "ADD"
    },
    "422": {
      "offset": [
        311,
        332
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "425": {
      "op": "JUMP"
    },
    "426": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "427": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "430": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B8"
    },
    "433": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "434": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "436": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AB"
    },
    "439": {
      "fn": "NewrlToken.deadlineEnd",
      "jump": "i",
      "offset": [
        1729,
        2249
      ],
      "op": "JUMP",
      "path": "1"
    },
    "440": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "441": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x524"
    },
    "444": {
      "fn": "NewrlToken.deadlineEnd",
      "jump": "i",
      "offset": [
        1729,
        2249
      ],
      "op": "JUMP",
      "path": "1"
    },
    "445": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1220,
        1723
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "446": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1220,
        1723
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "449": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1220,
        1723
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CB"
    },
    "452": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1220,
        1723
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "453": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1220,
        1723
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "455": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1220,
        1723
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AB"
    },
    "458": {
      "fn": "NewrlToken.lenderFound",
      "jump": "i",
      "offset": [
        1220,
        1723
      ],
      "op": "JUMP",
      "path": "1"
    },
    "459": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1220,
        1723
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "460": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1220,
        1723
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64F"
    },
    "463": {
      "fn": "NewrlToken.lenderFound",
      "jump": "i",
      "offset": [
        1220,
        1723
      ],
      "op": "JUMP",
      "path": "1"
    },
    "464": {
      "offset": [
        188,
        250
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "465": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "468": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DE"
    },
    "471": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "472": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "474": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA02"
    },
    "477": {
      "fn": "NewrlToken.lenderFound",
      "jump": "i",
      "offset": [
        188,
        250
      ],
      "op": "JUMP",
      "path": "1"
    },
    "478": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "479": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "481": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "483": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "484": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "485": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "486": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "488": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "489": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "490": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "491": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "493": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "494": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "DUP5",
      "path": "1"
    },
    "495": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "496": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "497": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "498": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "499": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "500": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "DUP3",
      "path": "1"
    },
    "501": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "502": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "503": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "504": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "505": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "506": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        188,
        250
      ],
      "op": "JUMP",
      "path": "1"
    },
    "507": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3248,
        3361
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "508": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3248,
        3361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "511": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3248,
        3361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x209"
    },
    "514": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3248,
        3361
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "515": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3248,
        3361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "517": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3248,
        3361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E7"
    },
    "520": {
      "fn": "NewrlToken.balanceOf",
      "jump": "i",
      "offset": [
        3248,
        3361
      ],
      "op": "JUMP",
      "path": "1"
    },
    "521": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3248,
        3361
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "528": {
      "op": "SHL"
    },
    "529": {
      "op": "SUB"
    },
    "530": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "AND",
      "path": "1",
      "statement": 1
    },
    "531": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3304,
        3319
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "533": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "534": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "DUP2",
      "path": "1"
    },
    "535": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "536": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "538": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "DUP2",
      "path": "1"
    },
    "539": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "540": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "541": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "543": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "544": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "545": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "546": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3338,
        3354
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "547": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        3248,
        3361
      ],
      "op": "JUMP",
      "path": "1"
    },
    "548": {
      "offset": [
        257,
        281
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "549": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        257,
        281
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "552": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        257,
        281
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "554": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        257,
        281
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "555": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        257,
        281
      ],
      "op": "DUP2",
      "path": "1"
    },
    "556": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        257,
        281
      ],
      "op": "JUMP",
      "path": "1"
    },
    "557": {
      "offset": [
        364,
        384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "558": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        364,
        384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "560": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        364,
        384
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "561": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        364,
        384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x240"
    },
    "564": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        364,
        384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "op": "SUB"
    },
    "573": {
      "offset": [
        364,
        384
      ],
      "op": "AND",
      "path": "1"
    },
    "574": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        364,
        384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "575": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        364,
        384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "576": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        364,
        384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "577": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        364,
        384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "579": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        364,
        384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "586": {
      "op": "SHL"
    },
    "587": {
      "op": "SUB"
    },
    "588": {
      "op": "SWAP1"
    },
    "589": {
      "op": "SWAP2"
    },
    "590": {
      "op": "AND"
    },
    "591": {
      "op": "DUP2"
    },
    "592": {
      "op": "MSTORE"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "offset": [
        364,
        384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "599": {
      "op": "JUMP"
    },
    "600": {
      "offset": [
        338,
        358
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "601": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        338,
        358
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D"
    },
    "604": {
      "fn": "NewrlToken.balanceOf",
      "offset": [
        338,
        358
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x767"
    },
    "607": {
      "fn": "NewrlToken.balanceOf",
      "jump": "i",
      "offset": [
        338,
        358
      ],
      "op": "JUMP",
      "path": "1"
    },
    "608": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2256,
        2573
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "609": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2256,
        2573
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "612": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2256,
        2573
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26E"
    },
    "615": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2256,
        2573
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "616": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2256,
        2573
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "618": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2256,
        2573
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x981"
    },
    "621": {
      "fn": "NewrlToken.transfer",
      "jump": "i",
      "offset": [
        2256,
        2573
      ],
      "op": "JUMP",
      "path": "1"
    },
    "622": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2256,
        2573
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "623": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2256,
        2573
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x774"
    },
    "626": {
      "fn": "NewrlToken.transfer",
      "jump": "i",
      "offset": [
        2256,
        2573
      ],
      "op": "JUMP",
      "path": "1"
    },
    "627": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "628": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "631": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x281"
    },
    "634": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "635": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "637": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x981"
    },
    "640": {
      "fn": "NewrlToken.registerAsset",
      "jump": "i",
      "offset": [
        791,
        1210
      ],
      "op": "JUMP",
      "path": "1"
    },
    "641": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "642": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x81F"
    },
    "645": {
      "fn": "NewrlToken.registerAsset",
      "jump": "i",
      "offset": [
        791,
        1210
      ],
      "op": "JUMP",
      "path": "1"
    },
    "646": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3603,
        3773
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "647": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3603,
        3773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "650": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3603,
        3773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x294"
    },
    "653": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3603,
        3773
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "654": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3603,
        3773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "656": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3603,
        3773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA02"
    },
    "659": {
      "fn": "NewrlToken.allowance",
      "jump": "i",
      "offset": [
        3603,
        3773
      ],
      "op": "JUMP",
      "path": "1"
    },
    "660": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3603,
        3773
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "667": {
      "op": "SHL"
    },
    "668": {
      "op": "SUB"
    },
    "669": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 2
    },
    "670": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "DUP3",
      "path": "1"
    },
    "671": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "AND",
      "path": "1"
    },
    "672": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3701,
        3718
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "674": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "675": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "DUP2",
      "path": "1"
    },
    "676": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "677": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "679": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "681": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "682": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "DUP2",
      "path": "1"
    },
    "683": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "684": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "686": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "DUP1",
      "path": "1"
    },
    "687": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "DUP4",
      "path": "1"
    },
    "688": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3756
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "689": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "690": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "691": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "692": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "AND",
      "path": "1"
    },
    "693": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "DUP3",
      "path": "1"
    },
    "694": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "695": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "696": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "697": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "698": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "699": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "700": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "701": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3741,
        3766
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "702": {
      "fn": "NewrlToken.allowance",
      "offset": [
        3603,
        3773
      ],
      "op": "JUMP",
      "path": "1"
    },
    "703": {
      "offset": [
        287,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "704": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "706": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "707": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "708": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CC"
    },
    "711": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "712": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA35"
    },
    "715": {
      "fn": "NewrlToken.allowance",
      "jump": "i",
      "offset": [
        287,
        305
      ],
      "op": "JUMP",
      "path": "1"
    },
    "716": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "717": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "718": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "720": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "ADD",
      "path": "1"
    },
    "721": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "723": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "724": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "725": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DIV",
      "path": "1"
    },
    "726": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "MUL",
      "path": "1"
    },
    "727": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "729": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "ADD",
      "path": "1"
    },
    "730": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "732": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "733": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "734": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP2",
      "path": "1"
    },
    "735": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "ADD",
      "path": "1"
    },
    "736": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "738": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "739": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "740": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "741": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "742": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "743": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP2",
      "path": "1"
    },
    "744": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP2",
      "path": "1"
    },
    "745": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "746": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "748": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "ADD",
      "path": "1"
    },
    "749": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP3",
      "path": "1"
    },
    "750": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "751": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "752": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F8"
    },
    "755": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "756": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA35"
    },
    "759": {
      "fn": "NewrlToken.allowance",
      "jump": "i",
      "offset": [
        287,
        305
      ],
      "op": "JUMP",
      "path": "1"
    },
    "760": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "761": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "762": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "763": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x345"
    },
    "766": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "767": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "768": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "770": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "LT",
      "path": "1"
    },
    "771": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31A"
    },
    "774": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "775": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "778": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "779": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP4",
      "path": "1"
    },
    "780": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "781": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DIV",
      "path": "1"
    },
    "782": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "MUL",
      "path": "1"
    },
    "783": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP4",
      "path": "1"
    },
    "784": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "785": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "786": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "788": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "ADD",
      "path": "1"
    },
    "789": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "790": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x345"
    },
    "793": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "JUMP",
      "path": "1"
    },
    "794": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "795": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP3",
      "path": "1"
    },
    "796": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "ADD",
      "path": "1"
    },
    "797": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "798": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "799": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "801": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "802": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "804": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "806": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "807": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "808": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "809": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP2",
      "path": "1"
    },
    "810": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "811": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP2",
      "path": "1"
    },
    "812": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "813": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "814": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "816": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "ADD",
      "path": "1"
    },
    "817": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "818": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "820": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "ADD",
      "path": "1"
    },
    "821": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "822": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP4",
      "path": "1"
    },
    "823": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "GT",
      "path": "1"
    },
    "824": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "827": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "828": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP3",
      "path": "1"
    },
    "829": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "830": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SUB",
      "path": "1"
    },
    "831": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "833": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "AND",
      "path": "1"
    },
    "834": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP3",
      "path": "1"
    },
    "835": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "ADD",
      "path": "1"
    },
    "836": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "837": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "838": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "POP",
      "path": "1"
    },
    "839": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "POP",
      "path": "1"
    },
    "840": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "POP",
      "path": "1"
    },
    "841": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "POP",
      "path": "1"
    },
    "842": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "POP",
      "path": "1"
    },
    "843": {
      "fn": "NewrlToken.allowance",
      "offset": [
        287,
        305
      ],
      "op": "DUP2",
      "path": "1"
    },
    "844": {
      "fn": "NewrlToken.allowance",
      "jump": "o",
      "offset": [
        287,
        305
      ],
      "op": "JUMP",
      "path": "1"
    },
    "845": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "846": {
      "fn": "NewrlToken.approve",
      "offset": [
        3486,
        3496
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 3
    },
    "847": {
      "fn": "NewrlToken.approve",
      "offset": [
        3450,
        3462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "849": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "DUP2",
      "path": "1"
    },
    "850": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "DUP2",
      "path": "1"
    },
    "851": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "852": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3485
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "854": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "856": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "857": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "DUP2",
      "path": "1"
    },
    "858": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "859": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "861": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "DUP1",
      "path": "1"
    },
    "862": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "DUP4",
      "path": "1"
    },
    "863": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3497
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "870": {
      "op": "SHL"
    },
    "871": {
      "op": "SUB"
    },
    "872": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "DUP8",
      "path": "1"
    },
    "873": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "AND",
      "path": "1"
    },
    "874": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "DUP1",
      "path": "1"
    },
    "875": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "DUP6",
      "path": "1"
    },
    "876": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "877": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "878": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "879": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "DUP1",
      "path": "1"
    },
    "880": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "DUP4",
      "path": "1"
    },
    "881": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "882": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3516
      ],
      "op": "DUP6",
      "path": "1"
    },
    "883": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3516
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "884": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3516
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "885": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 4
    },
    "886": {
      "fn": "NewrlToken.approve",
      "offset": [
        3450,
        3462
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "887": {
      "fn": "NewrlToken.approve",
      "offset": [
        3450,
        3462
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "888": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "889": {
      "fn": "NewrlToken.approve",
      "offset": [
        3478,
        3507
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "890": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "923": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "924": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A8"
    },
    "927": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "928": {
      "fn": "NewrlToken.approve",
      "offset": [
        3510,
        3516
      ],
      "op": "DUP7",
      "path": "1"
    },
    "929": {
      "op": "DUP2"
    },
    "930": {
      "op": "MSTORE"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "SWAP1"
    },
    "935": {
      "op": "JUMP"
    },
    "936": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "937": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "939": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "940": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "DUP1",
      "path": "1"
    },
    "941": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "942": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "SUB",
      "path": "1"
    },
    "943": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "944": {
      "fn": "NewrlToken.approve",
      "offset": [
        3531,
        3569
      ],
      "op": "LOG3",
      "path": "1"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "fn": "NewrlToken.approve",
      "offset": [
        3586,
        3590
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x1"
    },
    "948": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "949": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "950": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "951": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "POP",
      "path": "1"
    },
    "952": {
      "fn": "NewrlToken.approve",
      "offset": [
        3367,
        3597
      ],
      "op": "POP",
      "path": "1"
    },
    "953": {
      "fn": "NewrlToken.approve",
      "jump": "o",
      "offset": [
        3367,
        3597
      ],
      "op": "JUMP",
      "path": "1"
    },
    "954": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "op": "SUB"
    },
    "963": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "DUP4",
      "path": "1"
    },
    "964": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "AND",
      "path": "1"
    },
    "965": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2691,
        2703
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "967": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "DUP2",
      "path": "1"
    },
    "968": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "DUP2",
      "path": "1"
    },
    "969": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "970": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "972": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "974": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "975": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "DUP2",
      "path": "1"
    },
    "976": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "977": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "979": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "DUP1",
      "path": "1"
    },
    "980": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "DUP4",
      "path": "1"
    },
    "981": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2756
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "982": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2757,
        2767
      ],
      "op": "CALLER",
      "path": "1"
    },
    "983": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2768
      ],
      "op": "DUP5",
      "path": "1"
    },
    "984": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2768
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "985": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2768
      ],
      "op": "DUP3",
      "path": "1"
    },
    "986": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2768
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "987": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2768
      ],
      "op": "DUP1",
      "path": "1"
    },
    "988": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2768
      ],
      "op": "DUP4",
      "path": "1"
    },
    "989": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2768
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "990": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2768
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "991": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2814
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 6
    },
    "992": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2814
      ],
      "op": "DUP4",
      "path": "1"
    },
    "993": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2814
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "994": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2814
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "995": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2814
      ],
      "op": "DUP3",
      "path": "1"
    },
    "996": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2814
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "997": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2814
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "998": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2814
      ],
      "op": "DUP2",
      "path": "1"
    },
    "999": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2814
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1000": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2814
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1001": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2691,
        2703
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1002": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2691,
        2703
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1003": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2742,
        2768
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1004": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2824
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1005": {
      "op": "GT"
    },
    "1006": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2824
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1007": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2824
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1008": {
      "branch": 32,
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2824
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1009": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2854
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FA"
    },
    "1012": {
      "branch": 32,
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2854
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1013": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2854
      ],
      "op": "POP",
      "path": "1"
    },
    "1014": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2848,
        2854
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1015": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2828,
        2844
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1016": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2828,
        2854
      ],
      "op": "LT",
      "path": "1"
    },
    "1017": {
      "branch": 33,
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2828,
        2854
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1018": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2799,
        2854
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1019": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43F"
    },
    "1022": {
      "branch": 33,
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1023": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1025": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1026": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1032": {
      "op": "SHL"
    },
    "1033": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1034": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1037": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1039": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1040": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "ADD",
      "path": "1"
    },
    "1041": {
      "op": "MSTORE"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1046": {
      "op": "DUP3"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH17",
      "value": "0x119D5B991CC81B9BDD08185B1B1BDDD959"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "1069": {
      "op": "SHL"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1072": {
      "op": "DUP3"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1079": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1081": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1082": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1083": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1084": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "SUB",
      "path": "1"
    },
    "1085": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1086": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1087": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2778,
        2897
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "SUB"
    },
    "1096": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 7
    },
    "1097": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "AND",
      "path": "1"
    },
    "1098": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1100": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1101": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1102": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1103": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1105": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1106": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1107": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1108": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1110": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1111": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2920
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1112": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2930
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1113": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2930
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1114": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2924,
        2930
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1115": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2924,
        2930
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1116": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1117": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2930
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x467"
    },
    "1120": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2930
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1121": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2924,
        2930
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1122": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2924,
        2930
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1123": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2930
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "1126": {
      "fn": "NewrlToken.transferFrom",
      "jump": "i",
      "offset": [
        2907,
        2930
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1127": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2930
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1128": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2930
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1129": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2930
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1130": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2907,
        2930
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "op": "POP"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "op": "SUB"
    },
    "1141": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 8
    },
    "1142": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "AND",
      "path": "1"
    },
    "1143": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2948
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1145": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1146": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1147": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1148": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1150": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1151": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1152": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1153": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1155": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1156": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2955
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1157": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2965
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1158": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1159": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2959,
        2965
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1160": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2959,
        2965
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1161": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2948
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1162": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x494"
    },
    "1165": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1166": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2959,
        2965
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1167": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2959,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1168": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9E"
    },
    "1171": {
      "fn": "NewrlToken.transferFrom",
      "jump": "i",
      "offset": [
        2940,
        2965
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1172": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1173": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1174": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2965
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1175": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2940,
        2965
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1176": {
      "op": "POP"
    },
    "1177": {
      "op": "POP"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1180": {
      "op": "NOT"
    },
    "1181": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2979,
        3009
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1182": {
      "branch": 34,
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2979,
        3009
      ],
      "op": "LT",
      "path": "1"
    },
    "1183": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2975,
        3072
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1184": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2975,
        3072
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DC"
    },
    "1187": {
      "branch": 34,
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2975,
        3072
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "op": "SUB"
    },
    "1196": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 9
    },
    "1197": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "AND",
      "path": "1"
    },
    "1198": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1200": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1201": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1202": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1203": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3032
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1205": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1207": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1208": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1209": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1210": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1212": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1213": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1214": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1215": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3040,
        3050
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1216": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3051
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1217": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3051
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1218": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3051
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1219": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3051
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1220": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3051
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1221": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3051
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1222": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3051
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1223": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3061
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1224": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3061
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1225": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3055,
        3061
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1226": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3055,
        3061
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1227": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1228": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3061
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D6"
    },
    "1231": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3061
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1232": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3055,
        3061
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1233": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3055,
        3061
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1234": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3061
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9E"
    },
    "1237": {
      "fn": "NewrlToken.transferFrom",
      "jump": "i",
      "offset": [
        3025,
        3061
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1238": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3061
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1239": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3061
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1240": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3061
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1241": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3025,
        3061
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1242": {
      "op": "POP"
    },
    "1243": {
      "op": "POP"
    },
    "1244": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2975,
        3072
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1245": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3102,
        3105
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 10
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1252": {
      "op": "SHL"
    },
    "1253": {
      "op": "SUB"
    },
    "1254": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "AND",
      "path": "1"
    },
    "1255": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3095,
        3100
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1262": {
      "op": "SHL"
    },
    "1263": {
      "op": "SUB"
    },
    "1264": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "AND",
      "path": "1"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1267": {
      "op": "DUP1"
    },
    "1268": {
      "op": "MLOAD"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1271": {
      "op": "PUSH2",
      "value": "0xAE2"
    },
    "1274": {
      "op": "DUP4"
    },
    "1275": {
      "op": "CODECOPY"
    },
    "1276": {
      "op": "DUP2"
    },
    "1277": {
      "op": "MLOAD"
    },
    "1278": {
      "op": "SWAP2"
    },
    "1279": {
      "op": "MSTORE"
    },
    "1280": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3107,
        3113
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1281": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1283": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1284": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x50F"
    },
    "1287": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1288": {
      "op": "DUP2"
    },
    "1289": {
      "op": "MSTORE"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1292": {
      "op": "ADD"
    },
    "1293": {
      "op": "SWAP1"
    },
    "1294": {
      "op": "JUMP"
    },
    "1295": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1296": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1298": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1299": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1300": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1301": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SUB",
      "path": "1"
    },
    "1302": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1303": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1304": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3131,
        3135
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x1"
    },
    "1306": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3124,
        3135
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1307": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3124,
        3135
      ],
      "op": "POP",
      "path": "1"
    },
    "1308": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        3124,
        3135
      ],
      "op": "POP",
      "path": "1"
    },
    "1309": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1310": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1311": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1312": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "POP",
      "path": "1"
    },
    "1313": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "POP",
      "path": "1"
    },
    "1314": {
      "fn": "NewrlToken.transferFrom",
      "offset": [
        2579,
        3142
      ],
      "op": "POP",
      "path": "1"
    },
    "1315": {
      "fn": "NewrlToken.transferFrom",
      "jump": "o",
      "offset": [
        2579,
        3142
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1316": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1317": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1834,
        1846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1319": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1887,
        1894
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "op": "SUB"
    },
    "1328": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1894
      ],
      "op": "AND",
      "path": "1"
    },
    "1329": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1883
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1336": {
      "op": "SHL"
    },
    "1337": {
      "op": "SUB"
    },
    "1338": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1894
      ],
      "op": "AND",
      "path": "1"
    },
    "1339": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1894
      ],
      "op": "EQ",
      "path": "1"
    },
    "1340": {
      "branch": 35,
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1894
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1341": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1916
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1342": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1916
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1343": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1916
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x556"
    },
    "1346": {
      "branch": 35,
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1916
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1347": {
      "op": "POP"
    },
    "1348": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1911,
        1916
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1350": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1911,
        1916
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "op": "SUB"
    },
    "1359": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1898,
        1916
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1360": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1898,
        1916
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1361": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1898,
        1916
      ],
      "op": "AND",
      "path": "1"
    },
    "1362": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1911,
        1916
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1363": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1911,
        1916
      ],
      "op": "AND",
      "path": "1"
    },
    "1364": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1898,
        1916
      ],
      "op": "EQ",
      "path": "1"
    },
    "1365": {
      "branch": 36,
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1898,
        1916
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1366": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1916
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1367": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1368": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1936
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1369": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x570"
    },
    "1372": {
      "branch": 36,
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1936
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1931,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1376": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1931,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1383": {
      "op": "SHL"
    },
    "1384": {
      "op": "SUB"
    },
    "1385": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1920,
        1936
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1386": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1920,
        1936
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1387": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1920,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "1388": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1931,
        1936
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1389": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1931,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "1390": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1920,
        1936
      ],
      "op": "EQ",
      "path": "1"
    },
    "1391": {
      "branch": 37,
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1920,
        1936
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1392": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1874,
        1936
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1393": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1870,
        2213
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1394": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1870,
        2213
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x645"
    },
    "1397": {
      "branch": 37,
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1870,
        2213
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1404": {
      "op": "SHL"
    },
    "1405": {
      "op": "SUB"
    },
    "1406": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 12
    },
    "1407": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "AND",
      "path": "1"
    },
    "1408": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1410": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1411": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1412": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1413": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1415": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1416": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1417": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1418": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1420": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1421": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1422": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        1993
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1423": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        2003
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1424": {
      "op": "GT"
    },
    "1425": {
      "branch": 38,
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1976,
        2003
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1426": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5AD"
    },
    "1429": {
      "branch": 38,
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1430": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1432": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1433": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1439": {
      "op": "SHL"
    },
    "1440": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1441": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1442": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1444": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "ADD",
      "path": "1"
    },
    "1445": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x436"
    },
    "1448": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1449": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB5"
    },
    "1452": {
      "fn": "NewrlToken.deadlineEnd",
      "jump": "i",
      "offset": [
        1968,
        2026
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1453": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1968,
        2026
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "op": "SUB"
    },
    "1462": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 13
    },
    "1463": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "AND",
      "path": "1"
    },
    "1464": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2052
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1466": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1467": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1468": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1469": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1471": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1472": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1473": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1474": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1476": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1477": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2061
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1478": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2071
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1479": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2071
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1480": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2065,
        2071
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1481": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2065,
        2071
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1482": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2052
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1483": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2071
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D5"
    },
    "1486": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2071
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1487": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2065,
        2071
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1488": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2065,
        2071
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1489": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2071
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9E"
    },
    "1492": {
      "fn": "NewrlToken.deadlineEnd",
      "jump": "i",
      "offset": [
        2044,
        2071
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1493": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2071
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1494": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2071
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1495": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2071
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1496": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2044,
        2071
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2098,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x6"
    },
    "1501": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2098,
        2103
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2098,
        2103
      ],
      "op": "AND",
      "path": "1"
    },
    "1511": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2097
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1513": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1514": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2104
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1515": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2104
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1516": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1518": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2104
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1519": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1520": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2104
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1521": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1523": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2104
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1524": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2104
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1525": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2114
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1526": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2114
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1527": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2108,
        2114
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1528": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2108,
        2114
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1529": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2097
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1530": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x604"
    },
    "1533": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1534": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2108,
        2114
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1535": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2108,
        2114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1536": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "1539": {
      "fn": "NewrlToken.deadlineEnd",
      "jump": "i",
      "offset": [
        2089,
        2114
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1540": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2114
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1541": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1542": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2114
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1543": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2089,
        2114
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "op": "POP"
    },
    "1546": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2155,
        2160
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x6"
    },
    "1548": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2155,
        2160
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1549": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1551": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1552": {
      "op": "DUP4"
    },
    "1553": {
      "op": "DUP2"
    },
    "1554": {
      "op": "MSTORE"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "op": "SUB"
    },
    "1563": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2155,
        2160
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1564": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2155,
        2160
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1565": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2155,
        2160
      ],
      "op": "AND",
      "path": "1"
    },
    "1566": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2155,
        2160
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1567": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1568": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "AND",
      "path": "1"
    },
    "1569": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1572": {
      "op": "DUP1"
    },
    "1573": {
      "op": "MLOAD"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1576": {
      "op": "PUSH2",
      "value": "0xAE2"
    },
    "1579": {
      "op": "DUP4"
    },
    "1580": {
      "op": "CODECOPY"
    },
    "1581": {
      "op": "DUP2"
    },
    "1582": {
      "op": "MLOAD"
    },
    "1583": {
      "op": "SWAP2"
    },
    "1584": {
      "op": "MSTORE"
    },
    "1585": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1588": {
      "op": "ADD"
    },
    "1589": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1590": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1592": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1593": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1594": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1595": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "SUB",
      "path": "1"
    },
    "1596": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1597": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2137,
        2169
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1598": {
      "op": "POP"
    },
    "1599": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2194,
        2198
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x1"
    },
    "1601": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2187,
        2198
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x51D"
    },
    "1604": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2187,
        2198
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1605": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1870,
        2213
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1606": {
      "op": "POP"
    },
    "1607": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        2233,
        2238
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x0"
    },
    "1609": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1610": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1611": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "POP",
      "path": "1"
    },
    "1612": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "POP",
      "path": "1"
    },
    "1613": {
      "fn": "NewrlToken.deadlineEnd",
      "offset": [
        1729,
        2249
      ],
      "op": "POP",
      "path": "1"
    },
    "1614": {
      "fn": "NewrlToken.deadlineEnd",
      "jump": "o",
      "offset": [
        1729,
        2249
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1615": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1220,
        1723
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1616": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1325,
        1337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1618": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1377,
        1384
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1625": {
      "op": "SHL"
    },
    "1626": {
      "op": "SUB"
    },
    "1627": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1384
      ],
      "op": "AND",
      "path": "1"
    },
    "1628": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1373
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "SUB"
    },
    "1637": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1384
      ],
      "op": "AND",
      "path": "1"
    },
    "1638": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1384
      ],
      "op": "EQ",
      "path": "1"
    },
    "1639": {
      "branch": 39,
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1384
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1640": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1406
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1641": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1406
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1642": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x681"
    },
    "1645": {
      "branch": 39,
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1406
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1646": {
      "op": "POP"
    },
    "1647": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1401,
        1406
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1649": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1401,
        1406
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1656": {
      "op": "SHL"
    },
    "1657": {
      "op": "SUB"
    },
    "1658": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1388,
        1406
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1659": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1388,
        1406
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1660": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1388,
        1406
      ],
      "op": "AND",
      "path": "1"
    },
    "1661": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1401,
        1406
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1662": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1401,
        1406
      ],
      "op": "AND",
      "path": "1"
    },
    "1663": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1388,
        1406
      ],
      "op": "EQ",
      "path": "1"
    },
    "1664": {
      "branch": 40,
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1388,
        1406
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1665": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1406
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1666": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1426
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1667": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1426
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1668": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1426
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x69B"
    },
    "1671": {
      "branch": 40,
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1426
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1672": {
      "op": "POP"
    },
    "1673": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1421,
        1426
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1675": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1421,
        1426
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1682": {
      "op": "SHL"
    },
    "1683": {
      "op": "SUB"
    },
    "1684": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1410,
        1426
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1685": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1410,
        1426
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1686": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1410,
        1426
      ],
      "op": "AND",
      "path": "1"
    },
    "1687": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1421,
        1426
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1688": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1421,
        1426
      ],
      "op": "AND",
      "path": "1"
    },
    "1689": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1410,
        1426
      ],
      "op": "EQ",
      "path": "1"
    },
    "1690": {
      "branch": 41,
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1410,
        1426
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1691": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1364,
        1426
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1692": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1360,
        1689
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1693": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1360,
        1689
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x645"
    },
    "1696": {
      "branch": 41,
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1360,
        1689
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "op": "SUB"
    },
    "1705": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 18
    },
    "1706": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "AND",
      "path": "1"
    },
    "1707": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1709": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1710": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1711": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1712": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1714": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1715": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1716": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1717": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1719": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1720": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1721": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1479
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1722": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1489
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1723": {
      "op": "GT"
    },
    "1724": {
      "branch": 42,
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1460,
        1489
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1725": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D8"
    },
    "1728": {
      "branch": 42,
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1729": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1731": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1740": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1741": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1743": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "ADD",
      "path": "1"
    },
    "1744": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x436"
    },
    "1747": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1748": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB5"
    },
    "1751": {
      "fn": "NewrlToken.lenderFound",
      "jump": "i",
      "offset": [
        1452,
        1512
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1752": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1452,
        1512
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1759": {
      "op": "SHL"
    },
    "1760": {
      "op": "SUB"
    },
    "1761": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 19
    },
    "1762": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "AND",
      "path": "1"
    },
    "1763": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1534
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1765": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1766": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1767": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1768": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1770": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1771": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1772": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1773": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1775": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1776": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1545
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1777": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1555
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1778": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1555
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1779": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1549,
        1555
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1780": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1549,
        1555
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1781": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1534
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1782": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1555
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x700"
    },
    "1785": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1555
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1786": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1549,
        1555
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1787": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1549,
        1555
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1788": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1555
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9E"
    },
    "1791": {
      "fn": "NewrlToken.lenderFound",
      "jump": "i",
      "offset": [
        1526,
        1555
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1792": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1555
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1793": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1555
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1794": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1555
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1795": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1526,
        1555
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "op": "POP"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1804": {
      "op": "SHL"
    },
    "1805": {
      "op": "SUB"
    },
    "1806": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 20
    },
    "1807": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "AND",
      "path": "1"
    },
    "1808": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1810": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1811": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1812": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1813": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1815": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1816": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1817": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1818": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1820": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1821": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1586
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1822": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1823": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1824": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1590,
        1596
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1825": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1590,
        1596
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1826": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1827": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72D"
    },
    "1830": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1831": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1590,
        1596
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1832": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1590,
        1596
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1833": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "1836": {
      "fn": "NewrlToken.lenderFound",
      "jump": "i",
      "offset": [
        1569,
        1596
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1837": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1838": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1839": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "POP",
      "path": "1"
    },
    "1840": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "POP",
      "path": "1"
    },
    "1841": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1842": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1843": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1844": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1569,
        1596
      ],
      "op": "POP",
      "path": "1"
    },
    "1845": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1635,
        1642
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 21
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1615,
        1651
      ],
      "op": "AND",
      "path": "1"
    },
    "1855": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1624,
        1633
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "op": "SUB"
    },
    "1864": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1615,
        1651
      ],
      "op": "AND",
      "path": "1"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1867": {
      "op": "DUP1"
    },
    "1868": {
      "op": "MLOAD"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1871": {
      "op": "PUSH2",
      "value": "0xAE2"
    },
    "1874": {
      "op": "DUP4"
    },
    "1875": {
      "op": "CODECOPY"
    },
    "1876": {
      "op": "DUP2"
    },
    "1877": {
      "op": "MLOAD"
    },
    "1878": {
      "op": "SWAP2"
    },
    "1879": {
      "op": "MSTORE"
    },
    "1880": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1644,
        1650
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1881": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1615,
        1651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1883": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1615,
        1651
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1884": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1615,
        1651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x635"
    },
    "1887": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        1615,
        1651
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1888": {
      "op": "DUP2"
    },
    "1889": {
      "op": "MSTORE"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1892": {
      "op": "ADD"
    },
    "1893": {
      "op": "SWAP1"
    },
    "1894": {
      "op": "JUMP"
    },
    "1895": {
      "offset": [
        338,
        358
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1896": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        338,
        358
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1898": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        338,
        358
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1899": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        338,
        358
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1900": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        338,
        358
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CC"
    },
    "1903": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        338,
        358
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1904": {
      "fn": "NewrlToken.lenderFound",
      "offset": [
        338,
        358
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA35"
    },
    "1907": {
      "fn": "NewrlToken.lenderFound",
      "jump": "i",
      "offset": [
        338,
        358
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1908": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2256,
        2573
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1909": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2380,
        2390
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 22
    },
    "1910": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2335,
        2347
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1912": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1913": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1914": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1915": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1917": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1918": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1919": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1920": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1922": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1923": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1924": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2391
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1925": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2401
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1926": {
      "op": "GT"
    },
    "1927": {
      "branch": 43,
      "fn": "NewrlToken.transfer",
      "offset": [
        2371,
        2401
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1928": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A3"
    },
    "1931": {
      "branch": 43,
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1932": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1934": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1935": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1943": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1944": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1946": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "ADD",
      "path": "1"
    },
    "1947": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x436"
    },
    "1950": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1951": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB5"
    },
    "1954": {
      "fn": "NewrlToken.transfer",
      "jump": "i",
      "offset": [
        2363,
        2424
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1955": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2363,
        2424
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1956": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2443,
        2453
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 23
    },
    "1957": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1959": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2454
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1960": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2454
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1961": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2454
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1962": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1964": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2454
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1965": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2454
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1966": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2454
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1967": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1969": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2454
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1970": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2454
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1971": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2464
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1972": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2464
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1973": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1974": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2458,
        2464
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1975": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2442
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1976": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2464
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C2"
    },
    "1979": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2464
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1980": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1981": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2458,
        2464
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1982": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2464
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9E"
    },
    "1985": {
      "fn": "NewrlToken.transfer",
      "jump": "i",
      "offset": [
        2434,
        2464
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1986": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2464
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1987": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2464
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1988": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2464
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1989": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2434,
        2464
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1990": {
      "op": "POP"
    },
    "1991": {
      "op": "POP"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1998": {
      "op": "SHL"
    },
    "1999": {
      "op": "SUB"
    },
    "2000": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 24
    },
    "2001": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "AND",
      "path": "1"
    },
    "2002": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2004": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2005": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2006": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2007": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2009": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2010": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2011": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2012": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2014": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2015": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2487
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2016": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2497
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2017": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2497
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2018": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2491,
        2497
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2019": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2491,
        2497
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2020": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2021": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2497
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7EF"
    },
    "2024": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2497
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2025": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2491,
        2497
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2026": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2491,
        2497
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2027": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2497
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "2030": {
      "fn": "NewrlToken.transfer",
      "jump": "i",
      "offset": [
        2474,
        2497
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2031": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2497
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2032": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2497
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2033": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2497
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2034": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2474,
        2497
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2512,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x40"
    },
    "2039": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2512,
        2545
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2040": {
      "op": "DUP3"
    },
    "2041": {
      "op": "DUP2"
    },
    "2042": {
      "op": "MSTORE"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2049": {
      "op": "SHL"
    },
    "2050": {
      "op": "SUB"
    },
    "2051": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2512,
        2545
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2052": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2512,
        2545
      ],
      "op": "AND",
      "path": "1"
    },
    "2053": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2512,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2054": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2521,
        2531
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2055": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2521,
        2531
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2058": {
      "op": "DUP1"
    },
    "2059": {
      "op": "MLOAD"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2062": {
      "op": "PUSH2",
      "value": "0xAE2"
    },
    "2065": {
      "op": "DUP4"
    },
    "2066": {
      "op": "CODECOPY"
    },
    "2067": {
      "op": "DUP2"
    },
    "2068": {
      "op": "MLOAD"
    },
    "2069": {
      "op": "SWAP2"
    },
    "2070": {
      "op": "MSTORE"
    },
    "2071": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2512,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2074": {
      "op": "ADD"
    },
    "2075": {
      "fn": "NewrlToken.transfer",
      "offset": [
        2512,
        2545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A8"
    },
    "2078": {
      "op": "JUMP"
    },
    "2079": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2080": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        915,
        920
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "2082": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        915,
        920
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2083": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        877,
        889
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2085": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        877,
        889
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2092": {
      "op": "SHL"
    },
    "2093": {
      "op": "SUB"
    },
    "2094": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        915,
        929
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2095": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        915,
        929
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2096": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        915,
        929
      ],
      "op": "AND",
      "path": "1"
    },
    "2097": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        915,
        920
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2098": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        915,
        920
      ],
      "op": "AND",
      "path": "1"
    },
    "2099": {
      "branch": 44,
      "fn": "NewrlToken.registerAsset",
      "offset": [
        915,
        929
      ],
      "op": "EQ",
      "path": "1"
    },
    "2100": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        911,
        1176
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x907"
    },
    "2103": {
      "branch": 44,
      "fn": "NewrlToken.registerAsset",
      "offset": [
        911,
        1176
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2104": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        972,
        977
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x6"
    },
    "2106": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        972,
        977
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2113": {
      "op": "SHL"
    },
    "2114": {
      "op": "SUB"
    },
    "2115": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        972,
        977
      ],
      "op": "AND",
      "path": "1"
    },
    "2116": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2118": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2119": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2120": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2121": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2123": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2124": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2125": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2126": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2128": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2129": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2130": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        978
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2131": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        988
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2132": {
      "op": "GT"
    },
    "2133": {
      "branch": 45,
      "fn": "NewrlToken.registerAsset",
      "offset": [
        963,
        988
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2134": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x871"
    },
    "2137": {
      "branch": 45,
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2138": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2140": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2147": {
      "op": "SHL"
    },
    "2148": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2149": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2150": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2152": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "ADD",
      "path": "1"
    },
    "2153": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x436"
    },
    "2156": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2157": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB5"
    },
    "2160": {
      "fn": "NewrlToken.registerAsset",
      "jump": "i",
      "offset": [
        955,
        1011
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2161": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        955,
        1011
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2162": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1034,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x6"
    },
    "2164": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1034,
        1039
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2171": {
      "op": "SHL"
    },
    "2172": {
      "op": "SUB"
    },
    "2173": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1034,
        1039
      ],
      "op": "AND",
      "path": "1"
    },
    "2174": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1033
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2176": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1040
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2177": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1040
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2178": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1040
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2179": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1040
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2181": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1040
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2182": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1040
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2183": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1040
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2184": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1040
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2186": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1040
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2187": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1040
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2188": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1050
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2189": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1050
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2190": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1044,
        1050
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2191": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1044,
        1050
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2192": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1033
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2193": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x89B"
    },
    "2196": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2197": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1044,
        1050
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2198": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1044,
        1050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2199": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9E"
    },
    "2202": {
      "fn": "NewrlToken.registerAsset",
      "jump": "i",
      "offset": [
        1025,
        1050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2203": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2204": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2205": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1050
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2206": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1025,
        1050
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2207": {
      "op": "POP"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "op": "SUB"
    },
    "2217": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 28
    },
    "2218": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "AND",
      "path": "1"
    },
    "2219": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2221": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2222": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2223": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2224": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2226": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2227": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2228": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2229": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2231": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2232": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1079
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2233": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1089
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2234": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1089
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2235": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1083,
        1089
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2236": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1083,
        1089
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2237": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1072
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2238": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1089
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C8"
    },
    "2241": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1089
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2242": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1083,
        1089
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2243": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1083,
        1089
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2244": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1089
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "2247": {
      "fn": "NewrlToken.registerAsset",
      "jump": "i",
      "offset": [
        1064,
        1089
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2248": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1089
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2249": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1089
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2250": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1089
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2251": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1064,
        1089
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2252": {
      "op": "POP"
    },
    "2253": {
      "op": "POP"
    },
    "2254": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1117,
        1122
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x6"
    },
    "2256": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1117,
        1122
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2257": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2259": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2260": {
      "op": "DUP4"
    },
    "2261": {
      "op": "DUP2"
    },
    "2262": {
      "op": "MSTORE"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "op": "SUB"
    },
    "2271": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2272": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2273": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "AND",
      "path": "1"
    },
    "2274": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2275": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1117,
        1122
      ],
      "op": "AND",
      "path": "1"
    },
    "2276": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1117,
        1122
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2279": {
      "op": "DUP1"
    },
    "2280": {
      "op": "MLOAD"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2283": {
      "op": "PUSH2",
      "value": "0xAE2"
    },
    "2286": {
      "op": "DUP4"
    },
    "2287": {
      "op": "CODECOPY"
    },
    "2288": {
      "op": "DUP2"
    },
    "2289": {
      "op": "MLOAD"
    },
    "2290": {
      "op": "SWAP2"
    },
    "2291": {
      "op": "MSTORE"
    },
    "2292": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2295": {
      "op": "ADD"
    },
    "2296": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2298": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2299": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2300": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2301": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "SUB",
      "path": "1"
    },
    "2302": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2303": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1108,
        1138
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2304": {
      "op": "POP"
    },
    "2305": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1159,
        1163
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 30,
      "value": "0x1"
    },
    "2307": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1152,
        1163
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B4"
    },
    "2310": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1152,
        1163
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2311": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        911,
        1176
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2312": {
      "op": "POP"
    },
    "2313": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        1194,
        1199
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 31,
      "value": "0x0"
    },
    "2315": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2316": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2317": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "POP",
      "path": "1"
    },
    "2318": {
      "fn": "NewrlToken.registerAsset",
      "offset": [
        791,
        1210
      ],
      "op": "POP",
      "path": "1"
    },
    "2319": {
      "fn": "NewrlToken.registerAsset",
      "jump": "o",
      "offset": [
        791,
        1210
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2320": {
      "op": "JUMPDEST"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2325": {
      "op": "DUP1"
    },
    "2326": {
      "op": "DUP4"
    },
    "2327": {
      "op": "MSTORE"
    },
    "2328": {
      "op": "DUP4"
    },
    "2329": {
      "op": "MLOAD"
    },
    "2330": {
      "op": "DUP1"
    },
    "2331": {
      "op": "DUP3"
    },
    "2332": {
      "op": "DUP6"
    },
    "2333": {
      "op": "ADD"
    },
    "2334": {
      "op": "MSTORE"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2337": {
      "op": "JUMPDEST"
    },
    "2338": {
      "op": "DUP2"
    },
    "2339": {
      "op": "DUP2"
    },
    "2340": {
      "op": "LT"
    },
    "2341": {
      "op": "ISZERO"
    },
    "2342": {
      "op": "PUSH2",
      "value": "0x93D"
    },
    "2345": {
      "op": "JUMPI"
    },
    "2346": {
      "op": "DUP6"
    },
    "2347": {
      "op": "DUP2"
    },
    "2348": {
      "op": "ADD"
    },
    "2349": {
      "op": "DUP4"
    },
    "2350": {
      "op": "ADD"
    },
    "2351": {
      "op": "MLOAD"
    },
    "2352": {
      "op": "DUP6"
    },
    "2353": {
      "op": "DUP3"
    },
    "2354": {
      "op": "ADD"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2357": {
      "op": "ADD"
    },
    "2358": {
      "op": "MSTORE"
    },
    "2359": {
      "op": "DUP3"
    },
    "2360": {
      "op": "ADD"
    },
    "2361": {
      "op": "PUSH2",
      "value": "0x921"
    },
    "2364": {
      "op": "JUMP"
    },
    "2365": {
      "op": "JUMPDEST"
    },
    "2366": {
      "op": "DUP2"
    },
    "2367": {
      "op": "DUP2"
    },
    "2368": {
      "op": "GT"
    },
    "2369": {
      "op": "ISZERO"
    },
    "2370": {
      "op": "PUSH2",
      "value": "0x94F"
    },
    "2373": {
      "op": "JUMPI"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2378": {
      "op": "DUP4"
    },
    "2379": {
      "op": "DUP8"
    },
    "2380": {
      "op": "ADD"
    },
    "2381": {
      "op": "ADD"
    },
    "2382": {
      "op": "MSTORE"
    },
    "2383": {
      "op": "JUMPDEST"
    },
    "2384": {
      "op": "POP"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2387": {
      "op": "ADD"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2390": {
      "op": "NOT"
    },
    "2391": {
      "op": "AND"
    },
    "2392": {
      "op": "SWAP3"
    },
    "2393": {
      "op": "SWAP1"
    },
    "2394": {
      "op": "SWAP3"
    },
    "2395": {
      "op": "ADD"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2398": {
      "op": "ADD"
    },
    "2399": {
      "op": "SWAP4"
    },
    "2400": {
      "op": "SWAP3"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "jump": "o",
      "op": "JUMP"
    },
    "2405": {
      "op": "JUMPDEST"
    },
    "2406": {
      "op": "DUP1"
    },
    "2407": {
      "op": "CALLDATALOAD"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2414": {
      "op": "SHL"
    },
    "2415": {
      "op": "SUB"
    },
    "2416": {
      "op": "DUP2"
    },
    "2417": {
      "op": "AND"
    },
    "2418": {
      "op": "DUP2"
    },
    "2419": {
      "op": "EQ"
    },
    "2420": {
      "op": "PUSH2",
      "value": "0x97C"
    },
    "2423": {
      "op": "JUMPI"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2426": {
      "op": "DUP1"
    },
    "2427": {
      "op": "REVERT"
    },
    "2428": {
      "op": "JUMPDEST"
    },
    "2429": {
      "op": "SWAP2"
    },
    "2430": {
      "op": "SWAP1"
    },
    "2431": {
      "op": "POP"
    },
    "2432": {
      "jump": "o",
      "op": "JUMP"
    },
    "2433": {
      "op": "JUMPDEST"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2436": {
      "op": "DUP1"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2439": {
      "op": "DUP4"
    },
    "2440": {
      "op": "DUP6"
    },
    "2441": {
      "op": "SUB"
    },
    "2442": {
      "op": "SLT"
    },
    "2443": {
      "op": "ISZERO"
    },
    "2444": {
      "op": "PUSH2",
      "value": "0x994"
    },
    "2447": {
      "op": "JUMPI"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2450": {
      "op": "DUP1"
    },
    "2451": {
      "op": "REVERT"
    },
    "2452": {
      "op": "JUMPDEST"
    },
    "2453": {
      "op": "PUSH2",
      "value": "0x99D"
    },
    "2456": {
      "op": "DUP4"
    },
    "2457": {
      "op": "PUSH2",
      "value": "0x965"
    },
    "2460": {
      "jump": "i",
      "op": "JUMP"
    },
    "2461": {
      "op": "JUMPDEST"
    },
    "2462": {
      "op": "SWAP5"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2465": {
      "op": "SWAP4"
    },
    "2466": {
      "op": "SWAP1"
    },
    "2467": {
      "op": "SWAP4"
    },
    "2468": {
      "op": "ADD"
    },
    "2469": {
      "op": "CALLDATALOAD"
    },
    "2470": {
      "op": "SWAP4"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "jump": "o",
      "op": "JUMP"
    },
    "2475": {
      "op": "JUMPDEST"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2478": {
      "op": "DUP1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2483": {
      "op": "DUP5"
    },
    "2484": {
      "op": "DUP7"
    },
    "2485": {
      "op": "SUB"
    },
    "2486": {
      "op": "SLT"
    },
    "2487": {
      "op": "ISZERO"
    },
    "2488": {
      "op": "PUSH2",
      "value": "0x9C0"
    },
    "2491": {
      "op": "JUMPI"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2494": {
      "op": "DUP1"
    },
    "2495": {
      "op": "REVERT"
    },
    "2496": {
      "op": "JUMPDEST"
    },
    "2497": {
      "op": "PUSH2",
      "value": "0x9C9"
    },
    "2500": {
      "op": "DUP5"
    },
    "2501": {
      "op": "PUSH2",
      "value": "0x965"
    },
    "2504": {
      "jump": "i",
      "op": "JUMP"
    },
    "2505": {
      "op": "JUMPDEST"
    },
    "2506": {
      "op": "SWAP3"
    },
    "2507": {
      "op": "POP"
    },
    "2508": {
      "op": "PUSH2",
      "value": "0x9D7"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2513": {
      "op": "DUP6"
    },
    "2514": {
      "op": "ADD"
    },
    "2515": {
      "op": "PUSH2",
      "value": "0x965"
    },
    "2518": {
      "jump": "i",
      "op": "JUMP"
    },
    "2519": {
      "op": "JUMPDEST"
    },
    "2520": {
      "op": "SWAP2"
    },
    "2521": {
      "op": "POP"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2524": {
      "op": "DUP5"
    },
    "2525": {
      "op": "ADD"
    },
    "2526": {
      "op": "CALLDATALOAD"
    },
    "2527": {
      "op": "SWAP1"
    },
    "2528": {
      "op": "POP"
    },
    "2529": {
      "op": "SWAP3"
    },
    "2530": {
      "op": "POP"
    },
    "2531": {
      "op": "SWAP3"
    },
    "2532": {
      "op": "POP"
    },
    "2533": {
      "op": "SWAP3"
    },
    "2534": {
      "jump": "o",
      "op": "JUMP"
    },
    "2535": {
      "op": "JUMPDEST"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2540": {
      "op": "DUP3"
    },
    "2541": {
      "op": "DUP5"
    },
    "2542": {
      "op": "SUB"
    },
    "2543": {
      "op": "SLT"
    },
    "2544": {
      "op": "ISZERO"
    },
    "2545": {
      "op": "PUSH2",
      "value": "0x9F9"
    },
    "2548": {
      "op": "JUMPI"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2551": {
      "op": "DUP1"
    },
    "2552": {
      "op": "REVERT"
    },
    "2553": {
      "op": "JUMPDEST"
    },
    "2554": {
      "op": "PUSH2",
      "value": "0x51D"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "PUSH2",
      "value": "0x965"
    },
    "2561": {
      "jump": "i",
      "op": "JUMP"
    },
    "2562": {
      "op": "JUMPDEST"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2565": {
      "op": "DUP1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2568": {
      "op": "DUP4"
    },
    "2569": {
      "op": "DUP6"
    },
    "2570": {
      "op": "SUB"
    },
    "2571": {
      "op": "SLT"
    },
    "2572": {
      "op": "ISZERO"
    },
    "2573": {
      "op": "PUSH2",
      "value": "0xA15"
    },
    "2576": {
      "op": "JUMPI"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2579": {
      "op": "DUP1"
    },
    "2580": {
      "op": "REVERT"
    },
    "2581": {
      "op": "JUMPDEST"
    },
    "2582": {
      "op": "PUSH2",
      "value": "0xA1E"
    },
    "2585": {
      "op": "DUP4"
    },
    "2586": {
      "op": "PUSH2",
      "value": "0x965"
    },
    "2589": {
      "jump": "i",
      "op": "JUMP"
    },
    "2590": {
      "op": "JUMPDEST"
    },
    "2591": {
      "op": "SWAP2"
    },
    "2592": {
      "op": "POP"
    },
    "2593": {
      "op": "PUSH2",
      "value": "0xA2C"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2598": {
      "op": "DUP5"
    },
    "2599": {
      "op": "ADD"
    },
    "2600": {
      "op": "PUSH2",
      "value": "0x965"
    },
    "2603": {
      "jump": "i",
      "op": "JUMP"
    },
    "2604": {
      "op": "JUMPDEST"
    },
    "2605": {
      "op": "SWAP1"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "op": "SWAP3"
    },
    "2608": {
      "op": "POP"
    },
    "2609": {
      "op": "SWAP3"
    },
    "2610": {
      "op": "SWAP1"
    },
    "2611": {
      "op": "POP"
    },
    "2612": {
      "jump": "o",
      "op": "JUMP"
    },
    "2613": {
      "op": "JUMPDEST"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "DUP2"
    },
    "2617": {
      "op": "DUP2"
    },
    "2618": {
      "op": "SHR"
    },
    "2619": {
      "op": "SWAP1"
    },
    "2620": {
      "op": "DUP3"
    },
    "2621": {
      "op": "AND"
    },
    "2622": {
      "op": "DUP1"
    },
    "2623": {
      "op": "PUSH2",
      "value": "0xA49"
    },
    "2626": {
      "op": "JUMPI"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2629": {
      "op": "DUP3"
    },
    "2630": {
      "op": "AND"
    },
    "2631": {
      "op": "SWAP2"
    },
    "2632": {
      "op": "POP"
    },
    "2633": {
      "op": "JUMPDEST"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2636": {
      "op": "DUP3"
    },
    "2637": {
      "op": "LT"
    },
    "2638": {
      "op": "DUP2"
    },
    "2639": {
      "op": "EQ"
    },
    "2640": {
      "op": "ISZERO"
    },
    "2641": {
      "op": "PUSH2",
      "value": "0xA6A"
    },
    "2644": {
      "op": "JUMPI"
    },
    "2645": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2652": {
      "op": "SHL"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2655": {
      "op": "MSTORE"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2660": {
      "op": "MSTORE"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2665": {
      "op": "REVERT"
    },
    "2666": {
      "op": "JUMPDEST"
    },
    "2667": {
      "op": "POP"
    },
    "2668": {
      "op": "SWAP2"
    },
    "2669": {
      "op": "SWAP1"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "jump": "o",
      "op": "JUMP"
    },
    "2672": {
      "op": "JUMPDEST"
    },
    "2673": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2680": {
      "op": "SHL"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2688": {
      "op": "MSTORE"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2693": {
      "op": "REVERT"
    },
    "2694": {
      "op": "JUMPDEST"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2697": {
      "op": "DUP3"
    },
    "2698": {
      "op": "NOT"
    },
    "2699": {
      "op": "DUP3"
    },
    "2700": {
      "op": "GT"
    },
    "2701": {
      "op": "ISZERO"
    },
    "2702": {
      "op": "PUSH2",
      "value": "0xA99"
    },
    "2705": {
      "op": "JUMPI"
    },
    "2706": {
      "op": "PUSH2",
      "value": "0xA99"
    },
    "2709": {
      "op": "PUSH2",
      "value": "0xA70"
    },
    "2712": {
      "jump": "i",
      "op": "JUMP"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "POP"
    },
    "2715": {
      "op": "ADD"
    },
    "2716": {
      "op": "SWAP1"
    },
    "2717": {
      "jump": "o",
      "op": "JUMP"
    },
    "2718": {
      "op": "JUMPDEST"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2721": {
      "op": "DUP3"
    },
    "2722": {
      "op": "DUP3"
    },
    "2723": {
      "op": "LT"
    },
    "2724": {
      "op": "ISZERO"
    },
    "2725": {
      "op": "PUSH2",
      "value": "0xAB0"
    },
    "2728": {
      "op": "JUMPI"
    },
    "2729": {
      "op": "PUSH2",
      "value": "0xAB0"
    },
    "2732": {
      "op": "PUSH2",
      "value": "0xA70"
    },
    "2735": {
      "jump": "i",
      "op": "JUMP"
    },
    "2736": {
      "op": "JUMPDEST"
    },
    "2737": {
      "op": "POP"
    },
    "2738": {
      "op": "SUB"
    },
    "2739": {
      "op": "SWAP1"
    },
    "2740": {
      "jump": "o",
      "op": "JUMP"
    },
    "2741": {
      "op": "JUMPDEST"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2744": {
      "op": "DUP1"
    },
    "2745": {
      "op": "DUP3"
    },
    "2746": {
      "op": "MSTORE"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2749": {
      "op": "SWAP1"
    },
    "2750": {
      "op": "DUP3"
    },
    "2751": {
      "op": "ADD"
    },
    "2752": {
      "op": "MSTORE"
    },
    "2753": {
      "op": "PUSH18",
      "value": "0x4E6F2066756E647320617661696C61626C65"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2774": {
      "op": "SHL"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2777": {
      "op": "DUP3"
    },
    "2778": {
      "op": "ADD"
    },
    "2779": {
      "op": "MSTORE"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2782": {
      "op": "ADD"
    },
    "2783": {
      "op": "SWAP1"
    },
    "2784": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "740c7d8a1f735c5b9eebf3839c9716f1e4eccb18",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract NewrlToken {\n    uint256 private constant MAX_UINT256 = 2**256 - 1;\n    mapping(address => uint256) public balances;\n    mapping(address => mapping(address => uint256)) public allowed;\n\n    uint256 public totSupply;\n    string public name;\n    uint8 public decimals;\n    string public symbol;\n    address public owner;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    constructor() {\n        totSupply = 100000000000000;\n        owner = msg.sender;\n        balances[msg.sender] = totSupply;\n        name = \"NewrlToken\";\n        decimals = 1;\n        symbol = \"NWT\";\n    }\n\n    function registerAsset(address _from, uint256 _value)\n        public\n        returns (bool success)\n        {\n          if (owner != _from)\n          {\n            require(balances[owner] >= _value, \"No funds available\");\n            balances[owner] -= _value;\n            balances[_from] += _value;\n            emit Transfer(owner, _from, _value);\n            return true;\n          }\n          return false;\n        }\n    \n    function lenderFound(address _borrower, address _lender, uint256 _value)\n        public\n        returns (bool success) \n        {\n          if (_borrower != _lender && _borrower != owner && _lender != owner)\n          {\n            require(balances[_borrower] >= _value, \"No funds available\");\n            balances[_borrower] -= _value;\n            balances[_lender] += _value;\n            emit Transfer(_borrower, _lender, _value);\n            return true;\n          }\n          return false;\n        }\n\n    function deadlineEnd(address _borrower, address _lender, uint256 _value)\n        public\n        returns (bool success)\n        {\n            if (_borrower != _lender && _borrower != owner && _lender != owner)\n            {\n                require(balances[_lender] >= _value, \"No funds available\");\n                balances[_lender] -= _value;\n                balances[owner] += _value;\n                emit Transfer(_lender, owner, _value);\n                return true;\n            }\n            return false;\n        }\n\n\n    function transfer(address _to, uint256 _value)\n        public\n        returns (bool success)\n    {\n        require(balances[msg.sender] >= _value, \"No funds available\");\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) public returns (bool success) {\n        uint256 allowanceAllowed = allowed[_from][msg.sender];\n        require(\n            balances[_from] >= _value && allowanceAllowed >= _value,\n            \"Funds not allowed\"\n        );\n        balances[_to] += _value;\n        balances[_from] -= _value;\n        if (allowanceAllowed < MAX_UINT256) {\n            allowed[_from][msg.sender] -= _value;\n        }\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function totalSupply() public view returns (uint256 totSupp) {\n        return totSupply;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value)\n        public\n        returns (bool success)\n    {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender)\n        public\n        view\n        returns (uint256 remaining)\n    {\n        return allowed[_owner][_spender];\n    }\n}",
  "sourceMap": "58:3717:1:-:0;;;582:203;;;;;;;;;-1:-1:-1;618:15:1;606:9;:27;;;643:5;:18;;-1:-1:-1;;;;;;643:18:1;651:10;643:18;;;;;;:5;671:20;;;;;;;;;;;;:32;;;;713:19;;;;;;;;;;;;-1:-1:-1;;;713:19:1;;;;;;;;;:4;;:19;;:::i;:::-;-1:-1:-1;742:8:1;:12;;-1:-1:-1;;742:12:1;753:1;742:12;;;764:14;;;;;;;;;;;;;-1:-1:-1;;;764:14:1;;;;;;;;;:6;;:14;:::i;:::-;;58:3717;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:3717:1;;;-1:-1:-1;58:3717:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:2;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;58:3717:1;;;;;;",
  "sourcePath": "contracts/NewrlToken.sol",
  "type": "contract"
}